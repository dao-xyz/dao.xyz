{"version":3,"file":"static/js/556.cb66aa71.chunk.js","mappings":"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","sources":["../../../node_modules/@protobufjs/aspromise/index.js","../../../node_modules/@protobufjs/base64/index.js","../../../node_modules/@protobufjs/eventemitter/index.js","../../../node_modules/@protobufjs/float/index.js","../../../node_modules/@protobufjs/inquire/index.js","../../../node_modules/@protobufjs/pool/index.js","../../../node_modules/@protobufjs/utf8/index.js","../../../node_modules/ipfs-utils/src/env.js","../../../node_modules/ipfs-utils/src/files/url-source.js","../../../node_modules/protobufjs/minimal.js","../../../node_modules/protobufjs/src/index-minimal.js","../../../node_modules/protobufjs/src/reader.js","../../../node_modules/protobufjs/src/reader_buffer.js","../../../node_modules/protobufjs/src/roots.js","../../../node_modules/protobufjs/src/rpc.js","../../../node_modules/protobufjs/src/rpc/service.js","../../../node_modules/protobufjs/src/util/longbits.js","../../../node_modules/protobufjs/src/util/minimal.js","../../../node_modules/protobufjs/src/writer.js","../../../node_modules/protobufjs/src/writer_buffer.js","../../../node_modules/stream-to-it/source.js","../../../node_modules/@ipld/dag-cbor/src/index.js","../../../node_modules/cborg/esm/lib/json/encode.js","../../../node_modules/cborg/esm/lib/json/decode.js","../../../node_modules/@ipld/dag-json/src/index.js","../../../node_modules/@ipld/dag-pb/src/pb-decode.js","../../../node_modules/@ipld/dag-pb/src/pb-encode.js","../../../node_modules/@ipld/dag-pb/src/util.js","../../../node_modules/@ipld/dag-pb/src/index.js","../../../node_modules/@libp2p/interface-peer-id/src/index.ts","../../../node_modules/@libp2p/peer-id/src/index.ts","../../../node_modules/browser-readablestream-to-it/src/index.ts","../../src/utils.ts","../../src/signing.ts","../../src/encryption.ts","../../src/index.ts","../../../node_modules/ipfs-core-utils/node_modules/it-all/src/index.ts","../../../node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js","../../../node_modules/ipfs-core-utils/src/files/normalise-content.js","../../../node_modules/blob-to-it/src/index.ts","../../../node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js","../../../node_modules/ipfs-core-utils/src/files/normalise-input-single.js","../../../node_modules/ipfs-core-utils/src/files/utils.js","../../../node_modules/ipfs-core-utils/src/multibases.js","../../../node_modules/ipfs-core-utils/src/multicodecs.js","../../../node_modules/ipfs-core-utils/src/multihashes.js","../../../node_modules/ipfs-core-utils/src/pins/normalise-input.js","../../../node_modules/ipfs-core-utils/src/to-url-string.js","../../../node_modules/ipfs-core-utils/src/agent.browser.js","../../../node_modules/ipfs-http-client/src/lib/core.js","../../../node_modules/ipfs-http-client/src/lib/configure.js","../../../node_modules/ipfs-http-client/src/lib/mode-to-string.js","../../../node_modules/ipfs-http-client/src/lib/parse-mtime.js","../../../node_modules/ipfs-http-client/src/lib/to-url-search-params.js","../../../node_modules/ipfs-http-client/src/bitswap/wantlist.js","../../../node_modules/ipfs-http-client/src/bitswap/wantlist-for-peer.js","../../../node_modules/ipfs-http-client/src/bitswap/stat.js","../../../node_modules/ipfs-http-client/src/bitswap/unwant.js","../../../node_modules/ipfs-http-client/src/bitswap/index.js","../../../node_modules/ipfs-http-client/src/block/get.js","../../../node_modules/ipfs-core-utils/src/files/normalise-content.browser.js","../../../node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js","../../../node_modules/ipfs-core-utils/src/mode-to-string.js","../../../node_modules/ipfs-core-utils/src/multipart-request.browser.js","../../../node_modules/ipfs-http-client/src/lib/abort-signal.js","../../../node_modules/ipfs-http-client/src/block/put.js","../../../node_modules/ipfs-http-client/src/block/rm.js","../../../node_modules/ipfs-http-client/src/block/stat.js","../../../node_modules/ipfs-http-client/src/block/index.js","../../../node_modules/ipfs-http-client/src/bootstrap/add.js","../../../node_modules/ipfs-http-client/src/bootstrap/clear.js","../../../node_modules/ipfs-http-client/src/bootstrap/list.js","../../../node_modules/ipfs-http-client/src/bootstrap/reset.js","../../../node_modules/ipfs-http-client/src/bootstrap/rm.js","../../../node_modules/ipfs-http-client/src/bootstrap/index.js","../../../node_modules/ipfs-http-client/src/config/profiles/apply.js","../../../node_modules/ipfs-http-client/src/lib/object-to-camel.js","../../../node_modules/ipfs-http-client/src/config/profiles/list.js","../../../node_modules/ipfs-http-client/src/config/profiles/index.js","../../../node_modules/ipfs-http-client/src/config/get.js","../../../node_modules/ipfs-http-client/src/config/get-all.js","../../../node_modules/ipfs-http-client/src/config/replace.js","../../../node_modules/ipfs-http-client/src/config/set.js","../../../node_modules/ipfs-http-client/src/config/index.js","../../../node_modules/ipfs-http-client/src/dag/export.js","../../../node_modules/ipfs-http-client/src/lib/resolve.js","../../../node_modules/ipfs-http-client/src/dag/get.js","../../../node_modules/ipfs-http-client/src/dag/import.js","../../../node_modules/ipfs-http-client/src/dag/put.js","../../../node_modules/ipfs-http-client/src/dag/resolve.js","../../../node_modules/ipfs-http-client/src/dag/index.js","../../../node_modules/ipfs-http-client/src/dht/response-types.js","../../../node_modules/ipfs-http-client/src/dht/map-event.js","../../../node_modules/ipfs-http-client/src/dht/find-peer.js","../../../node_modules/ipfs-http-client/src/dht/find-provs.js","../../../node_modules/ipfs-http-client/src/dht/get.js","../../../node_modules/ipfs-http-client/src/dht/provide.js","../../../node_modules/ipfs-http-client/src/dht/put.js","../../../node_modules/ipfs-http-client/src/dht/query.js","../../../node_modules/ipfs-http-client/src/dht/index.js","../../../node_modules/ipfs-http-client/src/diag/cmds.js","../../../node_modules/ipfs-http-client/src/diag/net.js","../../../node_modules/ipfs-http-client/src/diag/sys.js","../../../node_modules/ipfs-http-client/src/diag/index.js","../../../node_modules/ipfs-http-client/src/files/chmod.js","../../../node_modules/ipfs-http-client/src/files/cp.js","../../../node_modules/ipfs-http-client/src/files/flush.js","../../../node_modules/ipfs-http-client/src/lib/object-to-camel-with-metadata.js","../../../node_modules/ipfs-http-client/src/files/ls.js","../../../node_modules/ipfs-http-client/src/files/mkdir.js","../../../node_modules/ipfs-http-client/src/files/mv.js","../../../node_modules/ipfs-http-client/src/files/read.js","../../../node_modules/ipfs-http-client/src/files/rm.js","../../../node_modules/ipfs-http-client/src/files/stat.js","../../../node_modules/ipfs-http-client/src/files/touch.js","../../../node_modules/ipfs-http-client/src/files/write.js","../../../node_modules/ipfs-http-client/src/files/index.js","../../../node_modules/ipfs-http-client/src/key/export.js","../../../node_modules/ipfs-http-client/src/key/gen.js","../../../node_modules/ipfs-http-client/src/key/import.js","../../../node_modules/ipfs-http-client/src/key/info.js","../../../node_modules/ipfs-http-client/src/key/list.js","../../../node_modules/ipfs-http-client/src/key/rename.js","../../../node_modules/ipfs-http-client/src/key/rm.js","../../../node_modules/ipfs-http-client/src/key/index.js","../../../node_modules/ipfs-http-client/src/log/level.js","../../../node_modules/ipfs-http-client/src/log/ls.js","../../../node_modules/ipfs-http-client/src/log/tail.js","../../../node_modules/ipfs-http-client/src/log/index.js","../../../node_modules/ipfs-http-client/src/name/publish.js","../../../node_modules/ipfs-http-client/src/name/resolve.js","../../../node_modules/ipfs-http-client/src/name/pubsub/cancel.js","../../../node_modules/ipfs-http-client/src/name/pubsub/state.js","../../../node_modules/ipfs-http-client/src/name/pubsub/subs.js","../../../node_modules/ipfs-http-client/src/name/pubsub/index.js","../../../node_modules/ipfs-http-client/src/name/index.js","../../../node_modules/ipfs-http-client/src/object/data.js","../../../node_modules/ipfs-http-client/src/object/get.js","../../../node_modules/ipfs-http-client/src/object/links.js","../../../node_modules/ipfs-http-client/src/object/new.js","../../../node_modules/ipfs-http-client/src/object/put.js","../../../node_modules/ipfs-http-client/src/object/stat.js","../../../node_modules/ipfs-http-client/src/object/patch/add-link.js","../../../node_modules/ipfs-http-client/src/object/patch/append-data.js","../../../node_modules/ipfs-http-client/src/object/patch/rm-link.js","../../../node_modules/ipfs-http-client/src/object/patch/set-data.js","../../../node_modules/ipfs-http-client/src/object/patch/index.js","../../../node_modules/ipfs-http-client/src/object/index.js","../../../node_modules/ipfs-http-client/src/pin/add-all.js","../../../node_modules/ipfs-http-client/src/pin/add.js","../../../node_modules/ipfs-http-client/src/pin/ls.js","../../../node_modules/ipfs-http-client/src/pin/rm-all.js","../../../node_modules/ipfs-http-client/src/pin/rm.js","../../../node_modules/ipfs-http-client/src/pin/remote/utils.js","../../../node_modules/ipfs-http-client/src/pin/remote/add.js","../../../node_modules/ipfs-http-client/src/pin/remote/ls.js","../../../node_modules/ipfs-http-client/src/pin/remote/rm.js","../../../node_modules/ipfs-http-client/src/pin/remote/rm-all.js","../../../node_modules/ipfs-http-client/src/pin/remote/service/utils.js","../../../node_modules/ipfs-http-client/src/pin/remote/service/add.js","../../../node_modules/ipfs-http-client/src/pin/remote/service/ls.js","../../../node_modules/ipfs-http-client/src/pin/remote/service/rm.js","../../../node_modules/ipfs-http-client/src/pin/remote/service/index.js","../../../node_modules/ipfs-http-client/src/pin/remote/index.js","../../../node_modules/ipfs-http-client/src/pin/index.js","../../../node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js","../../../node_modules/ipfs-http-client/src/pubsub/ls.js","../../../node_modules/ipfs-http-client/src/pubsub/peers.js","../../../node_modules/ipfs-http-client/src/pubsub/publish.js","../../../node_modules/ipfs-http-client/src/pubsub/subscribe.js","../../../node_modules/ipfs-http-client/src/pubsub/unsubscribe.js","../../../node_modules/ipfs-http-client/src/pubsub/subscription-tracker.js","../../../node_modules/ipfs-http-client/src/pubsub/index.js","../../../node_modules/ipfs-http-client/src/refs/local.js","../../../node_modules/ipfs-http-client/src/refs/index.js","../../../node_modules/ipfs-http-client/src/repo/gc.js","../../../node_modules/ipfs-http-client/src/repo/stat.js","../../../node_modules/ipfs-http-client/src/repo/version.js","../../../node_modules/ipfs-http-client/src/repo/index.js","../../../node_modules/ipfs-http-client/src/stats/bw.js","../../../node_modules/ipfs-http-client/src/stats/index.js","../../../node_modules/ipfs-http-client/src/swarm/addrs.js","../../../node_modules/ipfs-http-client/src/swarm/connect.js","../../../node_modules/ipfs-http-client/src/swarm/disconnect.js","../../../node_modules/ipfs-http-client/src/swarm/local-addrs.js","../../../node_modules/ipfs-http-client/src/swarm/peers.js","../../../node_modules/ipfs-http-client/src/swarm/index.js","../../../node_modules/ipfs-http-client/src/add-all.js","../../../node_modules/ipfs-http-client/src/add.js","../../../node_modules/ipfs-http-client/src/cat.js","../../../node_modules/ipfs-http-client/src/commands.js","../../../node_modules/ipfs-http-client/src/dns.js","../../../node_modules/ipfs-http-client/src/get-endpoint-config.js","../../../node_modules/ipfs-http-client/src/get.js","../../../node_modules/ipfs-http-client/src/id.js","../../../node_modules/ipfs-http-client/src/is-online.js","../../../node_modules/ipfs-http-client/src/ls.js","../../../node_modules/ipfs-http-client/src/mount.js","../../../node_modules/ipfs-http-client/src/ping.js","../../../node_modules/ipfs-http-client/src/resolve.js","../../../node_modules/ipfs-http-client/src/start.js","../../../node_modules/ipfs-http-client/src/stop.js","../../../node_modules/ipfs-http-client/src/version.js","../../../node_modules/ipfs-http-client/src/index.js","../../../node_modules/ipfs-unixfs/src/unixfs.js","../../../node_modules/ipfs-unixfs/src/index.js","../../../node_modules/it-first/src/index.ts","../../../node_modules/it-last/src/index.ts","../../../node_modules/it-map/src/index.ts","../../../node_modules/it-peekable/src/index.ts","../../../node_modules/parse-duration/index.mjs"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","'use strict'\nconst isElectron = require('is-electron')\n\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\n// @ts-ignore\nconst IS_ELECTRON = isElectron()\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\nconst IS_NODE = typeof require === 'function' && typeof process !== 'undefined' && typeof process.release !== 'undefined' && process.release.name === 'node' && !IS_ELECTRON\n// @ts-ignore - we either ignore worker scope or dom scope\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\nconst IS_TEST = typeof process !== 'undefined' && typeof process.env !== 'undefined' && process.env.NODE_ENV === 'test'\nconst IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nmodule.exports = {\n  isTest: IS_TEST,\n  isElectron: IS_ELECTRON,\n  isElectronMain: IS_ELECTRON_MAIN,\n  isElectronRenderer: IS_ELECTRON_RENDERER,\n  isNode: IS_NODE,\n  /**\n   * Detects browser main thread  **NOT** web worker or service worker\n   */\n  isBrowser: IS_BROWSER,\n  isWebWorker: IS_WEBWORKER,\n  isEnvWithDom: IS_ENV_WITH_DOM,\n  isReactNative: IS_REACT_NATIVE\n}\n","'use strict'\n\nconst HTTP = require('../http')\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\n */\nconst urlSource = (url, options) => {\n  return {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: readURLContent(url, options)\n  }\n}\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {AsyncIterable<Uint8Array>}\n */\nasync function * readURLContent (url, options) {\n  const http = new HTTP()\n  const response = await http.get(url, options)\n\n  yield * response.iterator()\n}\n\nmodule.exports = urlSource\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable\n\n  // Browser ReadableStream\n  if (readable.getReader) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) return\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new Error('unknown stream')\n}\n","import * as cborg from 'cborg'\nimport { CID } from 'multiformats/cid'\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nexport const name = 'dag-cbor'\nexport const code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborg.encode(node, encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => cborg.decode(data, decodeOptions)\n","import { Type } from '../token.js';\nimport { encodeCustom } from '../encode.js';\nimport { encodeErrPrefix } from '../common.js';\nimport {\n  asU8A,\n  fromString\n} from '../byte-utils.js';\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [Type.negint.major](buf, token) {\n    this[Type.uint.major](buf, token);\n  }\n  [Type.bytes.major](_buf, _token) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? asU8A(byts) : byts);\n  }\n  [Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [Type.tag.major](_buf, _token) {\n  }\n  [Type.float.major](buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token.value === undefined) {\n      throw new Error(`${ encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${ encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, new JSONEncoder(), options);\n}\nexport {\n  encode\n};","import { decode as _decode } from '../decode.js';\nimport {\n  Token,\n  Type\n} from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new Token(Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new Token(Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new Token(Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new Token(Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new Token(Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new Token(Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new Token(Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new Token(Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new Token(Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        const token = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return _decode(data, options);\n}\nexport {\n  decode,\n  Tokenizer\n};","/* eslint max-depth: [\"error\", 7] */\nimport { CID } from 'multiformats'\nimport { base64 } from 'multiformats/bases/base64'\nimport { Token, Type } from 'cborg'\nimport * as cborgJson from 'cborg/json'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n/**\n * @typedef {import('cborg/interface').DecodeTokenizer} DecodeTokenizer\n */\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal. Encoding a CID means replacing it with a `{\"/\":\"<CidString>}`\n * object as per the DAG-JSON spec.\n *\n * @param {any} obj\n * @returns {Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const cidString = cid.toString()\n\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1), // key\n    new Token(Type.string, cidString, cidString.length), // value\n    new Token(Type.break, undefined, 1)\n  ]\n}\n\n/**\n * bytesEncoder will receive all Uint8Arrays (and friends) during encode, it\n * needs to replace it with a `{\"/\":{\"bytes\":\"Base64ByteString\"}}` object as\n * per the DAG-JSON spec.\n *\n * @param {Uint8Array} bytes\n * @returns {Token[]|null}\n */\nfunction bytesEncoder (bytes) {\n  const bytesString = base64.encode(bytes).slice(1) // no mbase prefix\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1), // key\n    new Token(Type.map, Infinity, 1), // value\n    new Token(Type.string, 'bytes', 5), // inner key\n    new Token(Type.string, bytesString, bytesString.length), // inner value\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null // process with standard number encoder\n}\n\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Uint8Array: bytesEncoder, // TODO: all the typedarrays\n    Buffer: bytesEncoder, // TODO: all the typedarrays\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  /**\n   * @param {Uint8Array} data\n   * @param {object} [options]\n   */\n  constructor (data, options) {\n    super(data, options)\n    /** @type {Token[]} */\n    this.tokenBuffer = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  done () {\n    return this.tokenBuffer.length === 0 && super.done()\n  }\n\n  /**\n   * @returns {Token}\n   */\n  _next () {\n    if (this.tokenBuffer.length > 0) {\n      // @ts-ignore https://github.com/Microsoft/TypeScript/issues/30406\n      return this.tokenBuffer.pop()\n    }\n    return super.next()\n  }\n\n  /**\n   * Implements rules outlined in https://github.com/ipld/specs/pull/356\n   *\n   * @returns {Token}\n   */\n  next () {\n    const token = this._next()\n\n    if (token.type === Type.map) {\n      const keyToken = this._next()\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next()\n        if (valueToken.type === Type.string) { // *must* be a CID\n          const breakToken = this._next() // swallow the end-of-map token\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form')\n          }\n          this.tokenBuffer.push(valueToken) // CID.parse will pick this up after our tag token\n          return new Token(Type.tag, 42, 0)\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next()\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next()\n            if (innerValueToken.type === Type.string) { // *must* be Bytes\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next() // swallow two end-of-map tokens\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form')\n                }\n              }\n              const bytes = base64.decode(`m${innerValueToken.value}`)\n              return new Token(Type.bytes, bytes, innerValueToken.value.length)\n            }\n            this.tokenBuffer.push(innerValueToken) // bail\n          }\n          this.tokenBuffer.push(innerKeyToken) // bail\n        }\n        this.tokenBuffer.push(valueToken) // bail\n      }\n      this.tokenBuffer.push(keyToken) // bail\n    }\n    return token\n  }\n}\n\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n\n// we're going to get TAG(42)STRING(\"bafy...\") from the tokenizer so we only need\n// to deal with the STRING(\"bafy...\") at this point\ndecodeOptions.tags[42] = CID.parse\n\nexport const name = 'dag-json'\nexport const code = 0x0129\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborgJson.encode(node, encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => {\n  // the tokenizer is stateful so we need a single instance of it\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(data, decodeOptions) })\n  return cborgJson.decode(data, options)\n}\n","const textDecoder = new TextDecoder()\n\n/**\n * @typedef {import('./interface').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface').RawPBNode} RawPBNode\n */\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[number, number]}\n */\nfunction decodeVarint (bytes, offset) {\n  let v = 0\n\n  for (let shift = 0; ; shift += 7) {\n    /* c8 ignore next 3 */\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow')\n    }\n    /* c8 ignore next 3 */\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data')\n    }\n\n    const b = bytes[offset++]\n    v += shift < 28 ? (b & 0x7f) << shift : (b & 0x7f) * (2 ** shift)\n    if (b < 0x80) {\n      break\n    }\n  }\n  return [v, offset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[Uint8Array, number]}\n */\nfunction decodeBytes (bytes, offset) {\n  let byteLen\n  ;[byteLen, offset] = decodeVarint(bytes, offset)\n  const postOffset = offset + byteLen\n\n  /* c8 ignore next 3 */\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length')\n  }\n  /* c8 ignore next 3 */\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data')\n  }\n\n  return [bytes.subarray(offset, postOffset), postOffset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} index\n * @returns {[number, number, number]}\n */\nfunction decodeKey (bytes, index) {\n  let wire\n  ;[wire, index] = decodeVarint(bytes, index)\n  // [wireType, fieldNum, newIndex]\n  return [wire & 0x7, wire >> 3, index]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBLink}\n */\nfunction decodeLink (bytes) {\n  /** @type {RawPBLink} */\n  const link = {}\n  const l = bytes.length\n  let index = 0\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Hash`)\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash')\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash')\n      }\n\n      [link.Hash, index] = decodeBytes(bytes, index)\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Name`)\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name')\n      }\n\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      link.Name = textDecoder.decode(byts)\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section')\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Tsize`)\n      }\n\n      [link.Tsize, index] = decodeVarint(bytes, index)\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data')\n  }\n\n  return link\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBNode}\n */\nexport function decodeNode (bytes) {\n  const l = bytes.length\n  let index = 0\n  /** @type {RawPBLink[]|void} */\n  let links\n  let linksBeforeData = false\n  /** @type {Uint8Array|void} */\n  let data\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${wireType}`)\n    }\n\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section')\n      }\n\n      [data, index] = decodeBytes(bytes, index)\n      if (links) {\n        linksBeforeData = true\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) { // interleaved Links/Dode/Links\n        throw new Error('protobuf: (PBNode) duplicate Links section')\n      } else if (!links) {\n        links = []\n      }\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      links.push(decodeLink(byts))\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data')\n  }\n\n  /** @type {RawPBNode} */\n  const node = {}\n  if (data) {\n    node.Data = data\n  }\n  node.Links = links || []\n  return node\n}\n","const textEncoder = new TextEncoder()\nconst maxInt32 = 2 ** 32\nconst maxUInt32 = 2 ** 31\n\n/**\n * @typedef {import('./interface').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface').RawPBNode} RawPBNode\n */\n\n// the encoders work backward from the end of the bytes array\n\n/**\n * encodeLink() is passed a slice of the parent byte array that ends where this\n * link needs to end, so it packs to the right-most part of the passed `bytes`\n *\n * @param {RawPBLink} link\n * @param {Uint8Array} bytes\n * @returns {number}\n */\nfunction encodeLink (link, bytes) {\n  let i = bytes.length\n\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative')\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding')\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1\n    bytes[i] = 0x18\n  }\n\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name)\n    i -= nameBytes.length\n    bytes.set(nameBytes, i)\n    i = encodeVarint(bytes, i, nameBytes.length) - 1\n    bytes[i] = 0x12\n  }\n\n  if (link.Hash) {\n    i -= link.Hash.length\n    bytes.set(link.Hash, i)\n    i = encodeVarint(bytes, i, link.Hash.length) - 1\n    bytes[i] = 0xa\n  }\n\n  return bytes.length - i\n}\n\n/**\n * Encodes a PBNode into a new byte array of precisely the correct size\n *\n * @param {RawPBNode} node\n * @returns {Uint8Array}\n */\nexport function encodeNode (node) {\n  const size = sizeNode(node)\n  const bytes = new Uint8Array(size)\n  let i = size\n\n  if (node.Data) {\n    i -= node.Data.length\n    bytes.set(node.Data, i)\n    i = encodeVarint(bytes, i, node.Data.length) - 1\n    bytes[i] = 0xa\n  }\n\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i))\n      i -= size\n      i = encodeVarint(bytes, i, size) - 1\n      bytes[i] = 0x12\n    }\n  }\n\n  return bytes\n}\n\n/**\n * work out exactly how many bytes this link takes up\n *\n * @param {RawPBLink} link\n * @returns\n */\nfunction sizeLink (link) {\n  let n = 0\n\n  if (link.Hash) {\n    const l = link.Hash.length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize)\n  }\n\n  return n\n}\n\n/**\n * Work out exactly how many bytes this node takes up\n *\n * @param {RawPBNode} node\n * @returns {number}\n */\nfunction sizeNode (node) {\n  let n = 0\n\n  if (node.Data) {\n    const l = node.Data.length\n    n += 1 + l + sov(l)\n  }\n\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link)\n      n += 1 + l + sov(l)\n    }\n  }\n\n  return n\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @param {number} v\n * @returns {number}\n */\nfunction encodeVarint (bytes, offset, v) {\n  offset -= sov(v)\n  const base = offset\n\n  while (v >= maxUInt32) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v /= 128\n  }\n\n  while (v >= 128) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v >>>= 7\n  }\n\n  bytes[offset] = v\n\n  return base\n}\n\n/**\n * size of varint\n *\n * @param {number} x\n * @returns {number}\n */\nfunction sov (x) {\n  if (x % 2 === 0) {\n    x++\n  }\n  return Math.floor((len64(x) + 6) / 7)\n}\n\n/**\n * golang math/bits, how many bits does it take to represent this integer?\n *\n * @param {number} x\n * @returns {number}\n */\nfunction len64 (x) {\n  let n = 0\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32)\n    n = 32\n  }\n  if (x >= (1 << 16)) {\n    x >>>= 16\n    n += 16\n  }\n  if (x >= (1 << 8)) {\n    x >>>= 8\n    n += 8\n  }\n  return n + len8tab[x]\n}\n\n// golang math/bits\nconst len8tab = [\n  0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8\n]\n","import { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('./interface').PBLink} PBLink\n * @typedef {import('./interface').PBNode} PBNode\n */\n\nconst pbNodeProperties = ['Data', 'Links']\nconst pbLinkProperties = ['Hash', 'Name', 'Tsize']\n\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {PBLink} a\n * @param {PBLink} b\n * @returns {number}\n */\nfunction linkComparator (a, b) {\n  if (a === b) {\n    return 0\n  }\n\n  const abuf = a.Name ? textEncoder.encode(a.Name) : []\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : []\n\n  let x = abuf.length\n  let y = bbuf.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i]\n      y = bbuf[i]\n      break\n    }\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0\n}\n\n/**\n * @param {any} node\n * @param {string[]} properties\n * @returns {boolean}\n */\nfunction hasOnlyProperties (node, properties) {\n  return !Object.keys(node).some((p) => !properties.includes(p))\n}\n\n/**\n * Converts a CID, or a PBLink-like object to a PBLink\n *\n * @param {any} link\n * @returns {PBLink}\n */\nfunction asLink (link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link)\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n    return { Hash }\n  }\n\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  const pbl = {}\n\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash)\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash)\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash)\n        }\n      }\n    } catch (/** @type {any} */ e) {\n      throw new TypeError(`Invalid DAG-PB form: ${e.message}`)\n    }\n\n    if (cid) {\n      pbl.Hash = cid\n    }\n  }\n\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name\n  }\n\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize\n  }\n\n  return pbl\n}\n\n/**\n * @param {any} node\n * @returns {PBNode}\n */\nexport function prepare (node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node }\n  }\n\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  /** @type {PBNode} */\n  const pbn = {}\n\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data)\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  }\n\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink)\n      pbn.Links.sort(linkComparator)\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  } else {\n    pbn.Links = []\n  }\n\n  return pbn\n}\n\n/**\n * @param {PBNode} node\n */\nexport function validate (node) {\n  /*\n  type PBLink struct {\n    Hash optional Link\n    Name optional String\n    Tsize optional Int\n  }\n\n  type PBNode struct {\n    Links [PBLink]\n    Data optional Bytes\n  }\n  */\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)')\n  }\n\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)')\n  }\n\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)')\n  }\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i]\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)')\n    }\n\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)')\n    }\n\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)')\n    }\n\n    // @ts-ignore private property for TS\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)')\n    }\n\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)')\n    }\n\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)')\n    }\n\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)')\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {PBLink[]} [links=[]]\n * @returns {PBNode}\n */\nexport function createNode (data, links = []) {\n  return prepare({ Data: data, Links: links })\n}\n\n/**\n * @param {string} name\n * @param {number} size\n * @param {CID} cid\n * @returns {PBLink}\n */\nexport function createLink (name, size, cid) {\n  return asLink({ Hash: cid, Name: name, Tsize: size })\n}\n","import { CID } from 'multiformats/cid'\nimport { decodeNode } from './pb-decode.js'\nimport { encodeNode } from './pb-encode.js'\nimport { prepare, validate, createNode, createLink } from './util.js'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @typedef {import('./interface').PBLink} PBLink\n * @typedef {import('./interface').PBNode} PBNode\n */\n\nexport const name = 'dag-pb'\nexport const code = 0x70\n\n/**\n * @param {PBNode} node\n * @returns {ByteView<PBNode>}\n */\nexport function encode (node) {\n  validate(node)\n\n  const pbn = {}\n  if (node.Links) {\n    pbn.Links = node.Links.map((l) => {\n      const link = {}\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes // cid -> bytes\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n  if (node.Data) {\n    pbn.Data = node.Data\n  }\n\n  return encodeNode(pbn)\n}\n\n/**\n * @param {ByteView<PBNode>} bytes\n * @returns {PBNode}\n */\nexport function decode (bytes) {\n  const pbn = decodeNode(bytes)\n\n  const node = {}\n\n  if (pbn.Data) {\n    node.Data = pbn.Data\n  }\n\n  if (pbn.Links) {\n    node.Links = pbn.Links.map((l) => {\n      const link = {}\n      try {\n        link.Hash = CID.decode(l.Hash)\n      } catch (e) {}\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID')\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n\n  return node\n}\n\nexport { prepare, validate, createNode, createLink }\n","import type { CID } from 'multiformats/cid'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\n\ninterface BasePeerId {\n  readonly type: 'RSA' | 'Ed25519' | 'secp256k1'\n  readonly multihash: MultihashDigest\n  readonly privateKey?: Uint8Array\n  readonly publicKey?: Uint8Array\n\n  toString: () => string\n  toCID: () => CID\n  toBytes: () => Uint8Array\n  equals: (other: PeerId | Uint8Array | string) => boolean\n}\n\nexport interface RSAPeerId extends BasePeerId {\n  readonly type: 'RSA'\n  readonly publicKey?: Uint8Array\n}\n\nexport interface Ed25519PeerId extends BasePeerId {\n  readonly type: 'Ed25519'\n  readonly publicKey: Uint8Array\n}\n\nexport interface Secp256k1PeerId extends BasePeerId {\n  readonly type: 'secp256k1'\n  readonly publicKey: Uint8Array\n}\n\nexport type PeerId = RSAPeerId | Ed25519PeerId | Secp256k1PeerId\n\nexport const symbol = Symbol.for('@libp2p/peer-id')\n\nexport function isPeerId (other: any): other is PeerId {\n  return other != null && Boolean(other[symbol])\n}\n","import { CID } from 'multiformats/cid'\nimport { bases } from 'multiformats/basics'\nimport { base58btc } from 'multiformats/bases/base58'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { identity } from 'multiformats/hashes/identity'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport errcode from 'err-code'\nimport { Ed25519PeerId, RSAPeerId, Secp256k1PeerId, symbol } from '@libp2p/interface-peer-id'\nimport type { MultibaseDecoder } from 'multiformats/bases/interface'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\nimport type { PeerId } from '@libp2p/interface-peer-id'\n\nconst baseDecoder = Object\n  .values(bases)\n  .map(codec => codec.decoder)\n  // @ts-expect-error https://github.com/multiformats/js-multiformats/issues/141\n  .reduce((acc, curr) => acc.or(curr), bases.identity.decoder)\n\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72\n\nconst MARSHALLED_ED225519_PUBLIC_KEY_LENGTH = 36\nconst MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH = 37\n\ninterface PeerIdInit {\n  type: 'RSA' | 'Ed25519' | 'secp256k1'\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\ninterface RSAPeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n  publicKey?: Uint8Array\n}\n\ninterface Ed25519PeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\ninterface Secp256k1PeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\nclass PeerIdImpl {\n  public type: 'RSA' | 'Ed25519' | 'secp256k1'\n  public readonly multihash: MultihashDigest\n  public readonly privateKey?: Uint8Array\n  public readonly publicKey?: Uint8Array\n  private string?: string\n\n  constructor (init: PeerIdInit) {\n    this.type = init.type\n    this.multihash = init.multihash\n    this.privateKey = init.privateKey\n\n    // mark string cache as non-enumerable\n    Object.defineProperty(this, 'string', {\n      enumerable: false,\n      writable: true\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return `PeerId(${this.toString()})`\n  }\n\n  get [symbol] () {\n    return true\n  }\n\n  toString () {\n    if (this.string == null) {\n      this.string = base58btc.encode(this.multihash.bytes).slice(1)\n    }\n\n    return this.string\n  }\n\n  // return self-describing String representation\n  // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n  toCID () {\n    return CID.createV1(LIBP2P_KEY_CODE, this.multihash)\n  }\n\n  toBytes () {\n    return this.multihash.bytes\n  }\n\n  /**\n   * Returns Multiaddr as a JSON encoded object\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Checks the equality of `this` peer against a given PeerId\n   */\n  equals (id: PeerId | Uint8Array | string): boolean {\n    if (id instanceof Uint8Array) {\n      return uint8ArrayEquals(this.multihash.bytes, id)\n    } else if (typeof id === 'string') {\n      return peerIdFromString(id).equals(this as PeerId)\n    } else if (id?.multihash?.bytes != null) {\n      return uint8ArrayEquals(this.multihash.bytes, id.multihash.bytes)\n    } else {\n      throw new Error('not valid Id')\n    }\n  }\n}\n\nclass RSAPeerIdImpl extends PeerIdImpl implements RSAPeerId {\n  public readonly type = 'RSA'\n  public readonly publicKey?: Uint8Array\n\n  constructor (init: RSAPeerIdInit) {\n    super({ ...init, type: 'RSA' })\n\n    this.publicKey = init.publicKey\n  }\n}\n\nclass Ed25519PeerIdImpl extends PeerIdImpl implements Ed25519PeerId {\n  public readonly type = 'Ed25519'\n  public readonly publicKey: Uint8Array\n\n  constructor (init: Ed25519PeerIdInit) {\n    super({ ...init, type: 'Ed25519' })\n\n    this.publicKey = init.multihash.digest\n  }\n}\n\nclass Secp256k1PeerIdImpl extends PeerIdImpl implements Secp256k1PeerId {\n  public readonly type = 'secp256k1'\n  public readonly publicKey: Uint8Array\n\n  constructor (init: Secp256k1PeerIdInit) {\n    super({ ...init, type: 'secp256k1' })\n\n    this.publicKey = init.multihash.digest\n  }\n}\n\nexport function createPeerId (init: PeerIdInit) {\n  return new PeerIdImpl(init)\n}\n\nexport function peerIdFromPeerId (other: any): PeerId {\n  if (other.type === 'RSA') {\n    return new RSAPeerIdImpl(other)\n  }\n\n  if (other.type === 'Ed25519') {\n    return new Ed25519PeerIdImpl(other)\n  }\n\n  if (other.type === 'secp256k1') {\n    return new Secp256k1PeerIdImpl(other)\n  }\n\n  throw errcode(new Error('Not a PeerId'), 'ERR_INVALID_PARAMETERS')\n}\n\nexport function peerIdFromString (str: string, decoder?: MultibaseDecoder<any>): PeerId {\n  decoder = decoder ?? baseDecoder\n\n  if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n    // identity hash ed25519/secp256k1 key or sha2-256 hash of\n    // rsa public key - base58btc encoded either way\n    const multihash = Digest.decode(base58btc.decode(`z${str}`))\n\n    if (str.startsWith('12D')) {\n      return new Ed25519PeerIdImpl({ multihash })\n    } else if (str.startsWith('16U')) {\n      return new Secp256k1PeerIdImpl({ multihash })\n    } else {\n      return new RSAPeerIdImpl({ multihash })\n    }\n  }\n\n  return peerIdFromBytes(baseDecoder.decode(str))\n}\n\nexport function peerIdFromBytes (buf: Uint8Array) {\n  try {\n    const multihash = Digest.decode(buf)\n\n    if (multihash.code === identity.code) {\n      if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n        return new Ed25519PeerIdImpl({ multihash })\n      } else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n        return new Secp256k1PeerIdImpl({ multihash })\n      }\n    }\n\n    if (multihash.code === sha256.code) {\n      return new RSAPeerIdImpl({ multihash })\n    }\n  } catch {\n    return peerIdFromCID(CID.decode(buf))\n  }\n\n  throw new Error('Supplied PeerID CID is invalid')\n}\n\nexport function peerIdFromCID (cid: CID): PeerId {\n  if (cid == null || cid.multihash == null || cid.version == null || (cid.version === 1 && cid.code !== LIBP2P_KEY_CODE)) {\n    throw new Error('Supplied PeerID CID is invalid')\n  }\n\n  const multihash = cid.multihash\n\n  if (multihash.code === sha256.code) {\n    return new RSAPeerIdImpl({ multihash: cid.multihash })\n  } else if (multihash.code === identity.code) {\n    if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n      return new Ed25519PeerIdImpl({ multihash: cid.multihash })\n    } else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n      return new Secp256k1PeerIdImpl({ multihash: cid.multihash })\n    }\n  }\n\n  throw new Error('Supplied PeerID CID is invalid')\n}\n\n/**\n * @param publicKey - A marshalled public key\n * @param privateKey - A marshalled private key\n */\nexport async function peerIdFromKeys (publicKey: Uint8Array, privateKey?: Uint8Array): Promise<PeerId> {\n  if (publicKey.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n    return new Ed25519PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey })\n  }\n\n  if (publicKey.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n    return new Secp256k1PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey })\n  }\n\n  return new RSAPeerIdImpl({ multihash: await sha256.digest(publicKey), publicKey, privateKey })\n}\n","\nexport interface BrowserReadableStreamToItOptions {\n  preventCancel?: boolean\n}\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n */\nexport default async function * browserReadableStreamToIt <T> (stream: ReadableStream<T>, options: BrowserReadableStreamToItOptions = {}): AsyncGenerator<T, void, undefined> {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      await reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n",null,null,null,null,"\n/**\n * Collects all values from an (async) iterable and returns them as an array\n */\nexport default async function all <T> (source: AsyncIterable<T>|Iterable<T>): Promise<T[]> {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n","import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport map from 'it-map'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateMultiple (input, normaliseContent) {\n  // String\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  // fs.ReadStream\n  // @ts-expect-error _readableState is a property of a node fs.ReadStream\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input)\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n    }\n\n    // (Async)Iterable<fs.ReadStream>\n    // @ts-expect-error private field\n    if (value._readableState) {\n      // @ts-expect-error Node fs.ReadStreams have a `.path` property so we need to pass it as the content\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject({ content: value }, normaliseContent))\n      return\n    }\n\n    if (isBytes(value)) {\n      // @ts-expect-error peekable is still an iterable of ImportCandidates\n      yield toFileObject({ content: peekable }, normaliseContent)\n      return\n    }\n\n    // (Async)Iterable<(Async)Iterable<?>>\n    // (Async)Iterable<ReadableStream<?>>\n    // ReadableStream<(Async)Iterable<?>>\n    // ReadableStream<ReadableStream<?>>\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n","import errCode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport blobToIt from 'blob-to-it'\nimport itPeekable from 'it-peekable'\nimport all from 'it-all'\nimport map from 'it-map'\nimport {\n  isBytes,\n  isReadableStream,\n  isBlob\n} from './utils.js'\n\n/**\n * @template T\n * @param {T} thing\n */\nasync function * toAsyncIterable (thing) {\n  yield thing\n}\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nexport async function normaliseContent (input) {\n  // Bytes | String\n  if (isBytes(input)) {\n    return toAsyncIterable(toBytes(input))\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()))\n  }\n\n  // Blob\n  if (isBlob(input)) {\n    return blobToIt(input)\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value */\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return toAsyncIterable(new Uint8Array(0))\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all(peekable)))\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map(peekable, toBytes)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\nfunction toBytes (chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk)\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk)\n  }\n\n  return uint8ArrayFromString(chunk.toString())\n}\n","/* eslint-env browser */\n\nimport browserReadableStreamToIt from 'browser-readablestream-to-it'\n\nexport default function blobToIt (blob: Blob): AsyncIterable<Uint8Array> {\n  if (typeof blob.stream === 'function') {\n    return browserReadableStreamToIt(blob.stream())\n  }\n\n  // firefox < 69 does not support blob.stream()\n  // @ts-expect-error - response.body is optional, but in practice it's a stream.\n  return browserReadableStreamToIt(new Response(blob).body)\n}\n","import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateSingle (input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent)\n    return\n  }\n\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield { content: [] }\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    // (Async)Iterable<String>\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent)\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n","import { normaliseContent } from './normalise-content.js'\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidate} input\n */\nexport function normaliseInput (input) {\n  return normaliseCandidateSingle(input, normaliseContent)\n}\n","/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nexport function isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is globalThis.Blob}\n */\nexport function isBlob (obj) {\n  return obj.constructor &&\n    (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n    typeof obj.stream === 'function'\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/utils').ImportCandidate}\n */\nexport function isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nexport const isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n","/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadBaseFn}\n */\nconst LOAD_BASE = (name) => Promise.reject(new Error(`No base found for \"${name}\"`))\n\nexport class Multibases {\n  /**\n   * @param {object} options\n   * @param {LoadBaseFn} [options.loadBase]\n   * @param {MultibaseCodec[]} options.bases\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByPrefix = {}\n\n    this._loadBase = options.loadBase || LOAD_BASE\n\n    // Enable all supplied codecs\n    for (const base of options.bases) {\n      this.addBase(base)\n    }\n  }\n\n  /**\n   * Add support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  addBase (base) {\n    if (this._basesByName[base.name] || this._basesByPrefix[base.prefix]) {\n      throw new Error(`Codec already exists for codec \"${base.name}\"`)\n    }\n\n    this._basesByName[base.name] = base\n    this._basesByPrefix[base.prefix] = base\n  }\n\n  /**\n   * Remove support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  removeBase (base) {\n    delete this._basesByName[base.name]\n    delete this._basesByPrefix[base.prefix]\n  }\n\n  /**\n   * @param {string} nameOrPrefix\n   */\n  async getBase (nameOrPrefix) {\n    if (this._basesByName[nameOrPrefix]) {\n      return this._basesByName[nameOrPrefix]\n    }\n\n    if (this._basesByPrefix[nameOrPrefix]) {\n      return this._basesByPrefix[nameOrPrefix]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const base = await this._loadBase(nameOrPrefix)\n\n    if (this._basesByName[base.name] == null && this._basesByPrefix[base.prefix] == null) {\n      this.addBase(base)\n    }\n\n    return base\n  }\n\n  listBases () {\n    return Object.values(this._basesByName)\n  }\n}\n","/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadCodecFn}\n */\nconst LOAD_CODEC = (codeOrName) => Promise.reject(new Error(`No codec found for \"${codeOrName}\"`))\n\nexport class Multicodecs {\n  /**\n   * @param {object} options\n   * @param {LoadCodecFn} [options.loadCodec]\n   * @param {BlockCodec[]} options.codecs\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, BlockCodec>}} */\n    this._codecsByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<number, BlockCodec>}} */\n    this._codecsByCode = {}\n\n    this._loadCodec = options.loadCodec || LOAD_CODEC\n\n    // Enable all supplied codecs\n    for (const codec of options.codecs) {\n      this.addCodec(codec)\n    }\n  }\n\n  /**\n   * Add support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  addCodec (codec) {\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n      throw new Error(`Resolver already exists for codec \"${codec.name}\"`)\n    }\n\n    this._codecsByName[codec.name] = codec\n    this._codecsByCode[codec.code] = codec\n  }\n\n  /**\n   * Remove support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  removeCodec (codec) {\n    delete this._codecsByName[codec.name]\n    delete this._codecsByCode[codec.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getCodec (code) {\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const codec = await this._loadCodec(code)\n\n    if (table[code] == null) {\n      this.addCodec(codec)\n    }\n\n    return codec\n  }\n\n  listCodecs () {\n    return Object.values(this._codecsByName)\n  }\n}\n","/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadHasherFn}\n */\nconst LOAD_HASHER = (codeOrName) => Promise.reject(new Error(`No hasher found for \"${codeOrName}\"`))\n\nexport class Multihashes {\n  /**\n   * @param {object} options\n   * @param {LoadHasherFn} [options.loadHasher]\n   * @param {MultihashHasher[]} options.hashers\n   */\n  constructor (options) {\n    // Object with current list of active hashers\n    /** @type {Record<string, MultihashHasher>}} */\n    this._hashersByName = {}\n\n    // Object with current list of active hashers\n    /** @type {Record<number, MultihashHasher>}} */\n    this._hashersByCode = {}\n\n    this._loadHasher = options.loadHasher || LOAD_HASHER\n\n    // Enable all supplied hashers\n    for (const hasher of options.hashers) {\n      this.addHasher(hasher)\n    }\n  }\n\n  /**\n   * Add support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  addHasher (hasher) {\n    if (this._hashersByName[hasher.name] || this._hashersByCode[hasher.code]) {\n      throw new Error(`Resolver already exists for codec \"${hasher.name}\"`)\n    }\n\n    this._hashersByName[hasher.name] = hasher\n    this._hashersByCode[hasher.code] = hasher\n  }\n\n  /**\n   * Remove support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  removeHasher (hasher) {\n    delete this._hashersByName[hasher.name]\n    delete this._hashersByCode[hasher.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getHasher (code) {\n    const table = typeof code === 'string' ? this._hashersByName : this._hashersByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this hasher\n    const hasher = await this._loadHasher(code)\n\n    if (table[code] == null) {\n      this.addHasher(hasher)\n    }\n\n    return hasher\n  }\n\n  listHashers () {\n    return Object.values(this._hashersByName)\n  }\n}\n","import errCode from 'err-code'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {object} Pinnable\n * @property {string | InstanceType<typeof window.String> | CID} [path]\n * @property {CID} [cid]\n * @property {boolean} [recursive]\n * @property {any} [metadata]\n *\n * @typedef {CID|string|InstanceType<typeof window.String>|Pinnable} ToPin\n * @typedef {ToPin|Iterable<ToPin>|AsyncIterable<ToPin>} Source\n *\n * @typedef {object} Pin\n * @property {string|CID} path\n * @property {boolean} recursive\n * @property {any} [metadata]\n */\n\n/**\n * Transform one of:\n *\n * ```ts\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```ts\n * AsyncIterable<{ path: CID|String, recursive:boolean, metadata }>\n * ```\n *\n * @param {Source} input\n * @returns {AsyncIterable<Pin>}\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // CID\n  const cid = CID.asCID(input)\n\n  if (cid) {\n    yield toPin({ cid })\n    return\n  }\n\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input })\n    return\n  }\n\n  // { cid: CID recursive, metadata }\n  // @ts-expect-error - it still could be iterable or async iterable\n  if (input.cid != null || input.path != null) {\n    // @ts-expect-error\n    return yield toPin(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input) {\n    // @ts-expect-error\n    const iterator = input[Symbol.iterator]()\n    const first = iterator.next()\n    if (first.done) return iterator\n\n    // Iterable<CID|String>\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // Iterable<{ cid: CID recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // AsyncIterable<?>\n  if (Symbol.asyncIterator in input) {\n    // @ts-expect-error\n    const iterator = input[Symbol.asyncIterator]()\n    const first = await iterator.next()\n    if (first.done) return iterator\n\n    // AsyncIterable<CID|String>\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for await (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // AsyncIterable<{ cid: CID|String recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for await (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {Pinnable} input\n */\nfunction toPin (input) {\n  const path = input.cid || `${input.path}`\n\n  if (!path) {\n    throw errCode(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  /** @type {Pin} */\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  }\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata\n  }\n\n  return pin\n}\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\n\n/**\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nexport function toUrlString (url) {\n  try {\n    // @ts-expect-error\n    url = multiaddrToUri(multiaddr(url))\n  } catch (/** @type {any} */ err) { }\n\n  url = url.toString()\n\n  return url\n}\n","\nexport default () => {}\n","\n/* eslint-env browser */\n\nimport { isMultiaddr } from '@multiformats/multiaddr'\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js'\nimport parseDuration from 'parse-duration'\nimport { logger } from '@libp2p/logger'\nimport HTTP from 'ipfs-utils/src/http.js'\nimport mergeOpts from 'merge-options'\nimport { toUrlString } from 'ipfs-core-utils/to-url-string'\nimport getAgent from 'ipfs-core-utils/agent'\n\nconst log = logger('ipfs-http-client:lib:error-handler')\nconst merge = mergeOpts.bind({ ignoreUndefined: true })\n\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http'\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost'\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001'\n\n/**\n * @typedef {import('ipfs-utils/src/types').HTTPOptions} HTTPOptions\n * @typedef {import('../types').Options} Options\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {Options|URL|Multiaddr|string} [options]\n * @returns {Options}\n */\nconst normalizeOptions = (options = {}) => {\n  let url\n  /** @type {Options} */\n  let opts = {}\n  let agent\n\n  if (typeof options === 'string' || isMultiaddr(options)) {\n    url = new URL(toUrlString(options))\n  } else if (options instanceof URL) {\n    url = options\n  } else if (typeof options.url === 'string' || isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url))\n    opts = options\n  } else if (options.url instanceof URL) {\n    url = options.url\n    opts = options\n  } else {\n    opts = options || {}\n\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '')\n    const host = (opts.host || DEFAULT_HOST).split(':')[0]\n    const port = (opts.port || DEFAULT_PORT)\n\n    url = new URL(`${protocol}://${host}:${port}`)\n  }\n\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0'\n  }\n\n  if (isNode) {\n    const Agent = getAgent(url)\n\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      // Similar to browsers which limit connections to six per host\n      maxSockets: 6\n    })\n  }\n\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  }\n}\n\n/**\n * @param {Response} response\n */\nexport const errorHandler = async (response) => {\n  let msg\n\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json()\n      log(data)\n      msg = data.Message || data.message\n    } else {\n      msg = await response.text()\n    }\n  } catch (/** @type {any} */ err) {\n    log('Failed to parse error response', err)\n    // Failed to extract/parse error message from response\n    msg = err.message\n  }\n\n  /** @type {Error} */\n  let error = new HTTP.HTTPError(response)\n\n  if (msg) {\n    // This is what rs-ipfs returns where there's a timeout\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError()\n    }\n\n    // This is what go-ipfs returns where there's a timeout\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError()\n    }\n  }\n\n  // This also gets returned\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError()\n  }\n\n  // If we managed to extract a message from the response, use it\n  if (msg) {\n    error.message = msg\n  }\n\n  throw error\n}\n\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g\n\n/**\n * @param {string} str\n */\nconst kebabCase = (str) => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase()\n  })\n}\n\n/**\n * @param {string | number} value\n */\nconst parseTimeout = (value) => {\n  return typeof value === 'string' ? parseDuration(value) : value\n}\n\nexport class Client extends HTTP {\n  /**\n   * @param {Options|URL|Multiaddr|string} [options]\n   */\n  constructor (options = {}) {\n    const opts = normalizeOptions(options)\n\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${opts.url}`,\n      handleError: errorHandler,\n      transformSearchParams: (search) => {\n        const out = new URLSearchParams()\n\n        for (const [key, value] of search) {\n          if (\n            value !== 'undefined' &&\n            value !== 'null' &&\n            key !== 'signal'\n          ) {\n            out.append(kebabCase(key), value)\n          }\n\n          // @ts-expect-error server timeouts are strings\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value)\n          }\n        }\n\n        return out\n      },\n      // @ts-expect-error this can be a https agent or a http agent\n      agent: opts.agent\n    })\n\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.get\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.put\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.delete\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.options\n\n    const fetch = this.fetch\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${opts.url}/${resource}`\n      }\n\n      return fetch.call(this, resource, merge(options, {\n        method: 'POST'\n      }))\n    }\n  }\n}\n\nexport const HTTPError = HTTP.HTTPError\n","\n/* eslint-env browser */\n\nimport { Client } from './core.js'\n\n// Set default configuration and call create function with them\n/**\n * @typedef { import(\"../types\").Options } Options\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: Options) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: Options) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\nexport const configure = (fn) => {\n  return (options) => {\n    return fn(new Client(options), options)\n  }\n}\n","\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n","import errCode from 'err-code'\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {{ secs: number, nsecs?: number } | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errCode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n","import { modeToString } from './mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\n\n/**\n * @param {*} params\n * @returns {URLSearchParams}\n */\nexport function toUrlSearchParams ({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    }\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg\n  }\n\n  if (mtime != null) {\n    mtime = parseMtime(mtime)\n\n    options.mtime = mtime.secs\n    options.mtimeNsecs = mtime.nsecs\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode)\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = []\n  } else if (!Array.isArray(arg)) {\n    arg = [arg]\n  }\n\n  const urlSearchParams = new URLSearchParams(options)\n\n  arg.forEach((/** @type {any} */ arg) => urlSearchParams.append('arg', arg))\n\n  return urlSearchParams\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlist = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlist\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlistForPeer = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlistForPeer\"]}\n   */\n  async function wantlistForPeer (peerId, options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        peer: peerId.toString()\n      }),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlistForPeer\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BitswapAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n  return stat\n})\n\n/**\n * @param {any} res\n */\nfunction toCoreInterface (res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/'])),\n    peers: (res.Peers || []).map((/** @type {string} */ str) => peerIdFromString(str)),\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createUnwant = configure(api => {\n  /**\n   * @type {BitswapAPI[\"unwant\"]}\n   */\n  async function unwant (cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return unwant\n})\n","import { createWantlist } from './wantlist.js'\nimport { createWantlistForPeer } from './wantlist-for-peer.js'\nimport { createStat } from './stat.js'\nimport { createUnwant } from './unwant.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBitswap (config) {\n  return {\n    wantlist: createWantlist(config),\n    wantlistForPeer: createWantlistForPeer(config),\n    unwant: createUnwant(config),\n    stat: createStat(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {BlockAPI[\"get\"]}\n   */\n  async function get (cid, options = {}) {\n    const res = await api.post('block/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return new Uint8Array(await res.arrayBuffer())\n  }\n  return get\n})\n","import errCode from 'err-code'\nimport itPeekable from 'it-peekable'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport all from 'it-all'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream\n} from './utils.js'\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nexport async function normaliseContent (input) {\n  // Bytes\n  if (isBytes(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n","import { normaliseContent } from './normalise-content.browser.js'\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-core-types/src/utils').BrowserImportCandidate} BrowserImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n * @returns {AsyncGenerator<BrowserImportCandidate, void, undefined>}\n */\nexport function normaliseInput (input) {\n  // @ts-expect-error browser normaliseContent returns a Blob not an AsyncIterable<Uint8Array>\n  return normaliseCandidateMultiple(input, normaliseContent, true)\n}\n","\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n","\n// Import browser version otherwise electron-renderer will end up with node\n// version and fail.\nimport { normaliseInput } from './files/normalise-input-multiple.browser.js'\nimport { modeToString } from './mode-to-string.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n */\nexport async function multipartRequest (source, abortController, headers = {}) {\n  const parts = []\n  const formData = new FormData()\n  let index = 0\n  let total = 0\n\n  for await (const { content, path, mode, mtime } of normaliseInput(source)) {\n    let fileSuffix = ''\n    const type = content ? 'file' : 'dir'\n\n    if (index > 0) {\n      fileSuffix = `-${index}`\n    }\n\n    let fieldName = type + fileSuffix\n    const qs = []\n\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${modeToString(mode)}`)\n    }\n\n    if ((mtime) != null) {\n      const { secs, nsecs } = (mtime)\n\n      qs.push(`mtime=${secs}`)\n\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${nsecs}`)\n      }\n    }\n\n    if (qs.length) {\n      fieldName = `${fieldName}?${qs.join('&')}`\n    }\n\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined)\n      const end = total + content.size\n      parts.push({ name: path, start: total, end })\n      total = end\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }))\n    } else {\n      throw new Error('path or content or both must be set')\n    }\n\n    index++\n  }\n\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  }\n}\n","import { anySignal } from 'any-signal'\n\n/**\n * @param {any[]} signals\n * @returns {AbortSignal[]}\n */\nfunction filter (signals) {\n  return signals.filter(Boolean)\n}\n\n/**\n * @param  {...AbortSignal|undefined} signals\n */\nexport function abortSignal (...signals) {\n  return anySignal(filter(signals))\n}\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {BlockAPI[\"put\"]}\n   */\n  async function put (data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    let res\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...(\n          await multipartRequest([data], controller, options.headers)\n        )\n      })\n      res = await response.json()\n    } catch (/** @type {any} */ err) {\n      // Retry with \"protobuf\"/\"cbor\" format for go-ipfs\n      // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved\n      if (options.format === 'dag-pb') {\n        return put(data, { ...options, format: 'protobuf' })\n      } else if (options.format === 'dag-cbor') {\n        return put(data, { ...options, format: 'cbor' })\n      }\n\n      throw err\n    }\n\n    return CID.parse(res.Key)\n  }\n\n  return put\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n * @typedef {import('ipfs-core-types/src/block').RmResult} RmResult\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {BlockAPI[\"rm\"]}\n   */\n  async function * rm (cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid]\n    }\n\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed)\n    }\n  }\n\n  return rm\n})\n\n/**\n * @param {*} removed\n */\nfunction toCoreInterface (removed) {\n  /** @type {RmResult} */\n  const out = {\n    cid: CID.parse(removed.Hash)\n  }\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error)\n  }\n\n  return out\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BlockAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Key), size: data.Size }\n  }\n\n  return stat\n})\n","import { createGet } from './get.js'\nimport { createPut } from './put.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBlock (config) {\n  return {\n    get: createGet(config),\n    put: createPut(config),\n    rm: createRm(config),\n    stat: createStat(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createAdd = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"add\"]}\n   */\n  async function add (addr, options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return add\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createClear = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"clear\"]}\n   */\n  async function clear (options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        all: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return clear\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('bootstrap/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return list\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createReset = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"reset\"]}\n   */\n  async function reset (options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        default: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return reset\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"rm\"]}\n   */\n  async function rm (addr, options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return rm\n})\n","import { createAdd } from './add.js'\nimport { createClear } from './clear.js'\nimport { createList } from './list.js'\nimport { createReset } from './reset.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBootstrap (config) {\n  return {\n    add: createAdd(config),\n    clear: createClear(config),\n    list: createList(config),\n    reset: createReset(config),\n    rm: createRm(config)\n  }\n}\n","import { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createApply = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  async function apply (profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      original: data.OldCfg, updated: data.NewCfg\n    }\n  }\n\n  return apply\n})\n","\n/**\n * Convert object properties to camel case.\n * NOT recursive!\n * e.g.\n * AgentVersion => agentVersion\n * ID => id\n *\n * @param {Record<string, any>} obj\n */\nexport function objectToCamel (obj) {\n  if (obj == null) {\n    return obj\n  }\n\n  const caps = /^[A-Z]+$/\n\n  /** @type {Record<string, any>} */\n  const output = {}\n\n  return Object.keys(obj).reduce((camelObj, k) => {\n    if (caps.test(k)) { // all caps\n      camelObj[k.toLowerCase()] = obj[k]\n    } else if (caps.test(k[0])) { // pascal\n      camelObj[k[0].toLowerCase() + k.slice(1)] = obj[k]\n    } else {\n      camelObj[k] = obj[k]\n    }\n    return camelObj\n  }, output)\n}\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return data.map((/** @type {Record<string, any>} */ profile) => objectToCamel(profile))\n  }\n  return list\n})\n","import { createApply } from './apply.js'\nimport { createList } from './list.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createProfiles (config) {\n  return {\n    apply: createApply(config),\n    list: createList(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGetAll = configure(api => {\n  /**\n   * @type {ConfigAPI[\"getAll\"]}\n   */\n  const getAll = async (options = {}) => {\n    const res = await api.post('config/show', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data\n  }\n\n  return getAll\n})\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createReplace = configure(api => {\n  /**\n   * @type {ConfigAPI[\"replace\"]}\n   */\n  const replace = async (config, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('config/replace', {\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...(\n        await multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n\n  return replace\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createSet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"set\"]}\n   */\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type')\n    }\n\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(params),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n\n  return set\n})\n\n/**\n * @param {*} key\n * @param {*} value\n */\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n    case 'boolean':\n      return { arg: [key, value.toString()], bool: true }\n    case 'string':\n      return { arg: [key, value] }\n    default:\n      return { arg: [key, JSON.stringify(value)], json: true }\n  }\n}\n","import { createProfiles } from './profiles/index.js'\nimport { createGet } from './get.js'\nimport { createGetAll } from './get-all.js'\nimport { createReplace } from './replace.js'\nimport { createSet } from './set.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createConfig (config) {\n  return {\n    getAll: createGetAll(config),\n    get: createGet(config),\n    set: createSet(config),\n    replace: createReplace(config),\n    profiles: createProfiles(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createExport = configure(api => {\n  /**\n   * @type {DAGAPI[\"export\"]}\n   */\n  async function * dagExport (root, options = {}) {\n    const res = await api.post('dag/export', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: root.toString()\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return dagExport\n})\n","import { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * Retrieves IPLD Nodes along the `path` that is rooted at `cid`.\n *\n * @param {CID} cid - the CID where the resolving starts\n * @param {string} path - the path that should be resolved\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {(cid: CID, options?: AbortOptions) => Promise<Uint8Array>} getBlock\n * @param {AbortOptions} [options]\n */\nexport async function * resolve (cid, path, codecs, getBlock, options) {\n  /**\n   * @param {CID} cid\n   */\n  const load = async (cid) => {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await getBlock(cid, options)\n\n    return codec.decode(block)\n  }\n\n  const parts = path.split('/').filter(Boolean)\n  let value = await load(cid)\n  let lastCid = cid\n\n  // End iteration if there isn't a CID to follow any more\n  while (parts.length) {\n    const key = parts.shift()\n\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${path}\"`), 'ERR_INVALID_PATH')\n    }\n\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key]\n\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      }\n    } else {\n      throw errCode(new Error(`no link named \"${key}\" under ${lastCid}`), 'ERR_NO_LINK')\n    }\n\n    const cid = CID.asCID(value)\n\n    if (cid) {\n      lastCid = cid\n      value = await load(value)\n    }\n  }\n\n  yield {\n    value,\n    remainderPath: ''\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { resolve } from '../lib/resolve.js'\nimport first from 'it-first'\nimport last from 'it-last'\nimport errCode from 'err-code'\nimport { createGet as createBlockGet } from '../block/get.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createGet = (codecs, options) => {\n  const fn = configure((api, opts) => {\n    const getBlock = createBlockGet(opts)\n\n    /**\n     * @type {DAGAPI[\"get\"]}\n     */\n    const get = async (cid, options = {}) => {\n      if (options.path) {\n        const entry = options.localResolve\n          ? await first(resolve(cid, options.path, codecs, getBlock, options))\n          : await last(resolve(cid, options.path, codecs, getBlock, options))\n        /** @type {import('ipfs-core-types/src/dag').GetResult | undefined} - first and last will return undefined when empty */\n        const result = (entry)\n\n        if (!result) {\n          throw errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n        }\n\n        return result\n      }\n\n      const codec = await codecs.getCodec(cid.code)\n      const block = await getBlock(cid, options)\n      const node = codec.decode(block)\n\n      return {\n        value: node,\n        remainderPath: ''\n      }\n    }\n\n    return get\n  })\n\n  return fn(options)\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {DAGAPI[\"import\"]}\n   */\n  async function * dagImport (source, options = {}) {\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body } = await multipartRequest(source, controller, options.headers)\n\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    })\n\n    for await (const { Root } of res.ndjson()) {\n      if (Root !== undefined) {\n        const { Cid: { '/': Cid }, PinErrorMsg } = Root\n\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        }\n      }\n    }\n  }\n\n  return dagImport\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createPut = (codecs, options) => {\n  const fn = configure((api) => {\n    /**\n     * @type {DAGAPI[\"put\"]}\n     */\n    const put = async (dagNode, options = {}) => {\n      const settings = {\n        storeCodec: 'dag-cbor',\n        hashAlg: 'sha2-256',\n        ...options\n      }\n\n      let serialized\n\n      if (settings.inputCodec) {\n        // if you supply an inputCodec, we assume you're passing in a raw, encoded\n        // block using that codec, so we'll just pass that on to the server and let\n        // it deal with the decode/encode/store cycle\n        if (!(dagNode instanceof Uint8Array)) {\n          throw new Error('Can only inputCodec on raw bytes that can be decoded')\n        }\n        serialized = dagNode\n      } else {\n        // if you don't supply an inputCodec, we assume you've passed in a JavaScript\n        // object you want to have encoded using storeCodec, so we'll prepare it for\n        // you if we have the codec\n        const storeCodec = await codecs.getCodec(settings.storeCodec)\n        serialized = storeCodec.encode(dagNode)\n        // now we have a serialized form, the server should be told to receive it\n        // in that format\n        settings.inputCodec = settings.storeCodec\n      }\n\n      // allow aborting requests on body errors\n      const controller = new AbortController()\n      const signal = abortSignal(controller.signal, settings.signal)\n\n      const res = await api.post('dag/put', {\n        timeout: settings.timeout,\n        signal,\n        searchParams: toUrlSearchParams(settings),\n        ...(\n          await multipartRequest([serialized], controller, settings.headers)\n        )\n      })\n      const data = await res.json()\n\n      return CID.parse(data.Cid['/'])\n    }\n\n    return put\n  })\n\n  return fn(options)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Cid['/']), remainderPath: data.RemPath }\n  }\n\n  return resolve\n})\n","import { createExport } from './export.js'\nimport { createGet } from './get.js'\nimport { createImport } from './import.js'\nimport { createPut } from './put.js'\nimport { createResolve } from './resolve.js'\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} config\n */\nexport function createDag (codecs, config) {\n  return {\n    export: createExport(config),\n    get: createGet(codecs, config),\n    import: createImport(config),\n    put: createPut(codecs, config),\n    resolve: createResolve(config)\n  }\n}\n","\n// Response types are defined here =\n// https://github.com/libp2p/go-libp2p-core/blob/6e566d10f4a5447317a66d64c7459954b969bdab/routing/query.go#L15-L24\nexport const SendingQuery = 0\nexport const PeerResponse = 1\nexport const FinalPeer = 2\nexport const QueryError = 3\nexport const Provider = 4\nexport const Value = 5\nexport const AddingPeer = 6\nexport const DialingPeer = 7\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport {\n  SendingQuery,\n  PeerResponse,\n  FinalPeer,\n  QueryError,\n  Provider,\n  Value,\n  AddingPeer,\n  DialingPeer\n} from './response-types.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {{Type: number, ID: string, Extra: string, Responses: {ID: string, Addrs: string[]}[]}} event\n * @returns {import('ipfs-core-types/src/dht').QueryEvent}\n */\nexport const mapEvent = (event) => {\n  if (event.Type === SendingQuery) {\n    return {\n      name: 'SENDING_QUERY',\n      type: event.Type\n    }\n  }\n\n  if (event.Type === PeerResponse) {\n    return {\n      from: peerIdFromString(event.ID),\n      name: 'PEER_RESPONSE',\n      type: event.Type,\n      // TODO: how to infer this from the go-ipfs response\n      messageType: 0,\n      // TODO: how to infer this from the go-ipfs response\n      messageName: 'PUT_VALUE',\n      closer: (event.Responses || []).map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] })),\n      providers: (event.Responses || []).map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] }))\n      // TODO: how to infer this from the go-ipfs response\n      // record: ???\n    }\n  }\n\n  if (event.Type === FinalPeer) {\n    // dht.query ends with a FinalPeer event with no Responses\n    /** @type {import('@libp2p/interface-peer-info').PeerInfo} */\n    let peer = {\n      // @ts-expect-error go-ipfs does not return this\n      id: event.ID ?? peerIdFromString(event.ID),\n      /** @type {Multiaddr[]} */\n      multiaddrs: [],\n      protocols: []\n    }\n\n    if (event.Responses && event.Responses.length) {\n      // dht.findPeer has the result in the Responses field\n      peer = {\n        id: peerIdFromString(event.Responses[0].ID),\n        multiaddrs: event.Responses[0].Addrs.map(addr => multiaddr(addr)),\n        protocols: []\n      }\n    }\n\n    return {\n      name: 'FINAL_PEER',\n      type: event.Type,\n      peer\n    }\n  }\n\n  if (event.Type === QueryError) {\n    return {\n      name: 'QUERY_ERROR',\n      type: event.Type,\n      error: new Error(event.Extra)\n    }\n  }\n\n  if (event.Type === Provider) {\n    return {\n      name: 'PROVIDER',\n      type: event.Type,\n      providers: event.Responses.map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] }))\n    }\n  }\n\n  if (event.Type === Value) {\n    return {\n      name: 'VALUE',\n      type: event.Type,\n      value: uint8ArrayFromString(event.Extra, 'base64pad')\n    }\n  }\n\n  if (event.Type === AddingPeer) {\n    const peers = event.Responses.map(({ ID }) => peerIdFromString(ID))\n\n    if (!peers.length) {\n      throw new Error('No peer found')\n    }\n\n    return {\n      name: 'ADDING_PEER',\n      type: event.Type,\n      peer: peers[0]\n    }\n  }\n\n  if (event.Type === DialingPeer) {\n    return {\n      name: 'DIALING_PEER',\n      type: event.Type,\n      peer: peerIdFromString(event.ID)\n    }\n  }\n\n  throw new Error('Unknown DHT event type')\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createFindPeer = configure(api => {\n  /**\n   * @type {DHTAPI[\"findPeer\"]}\n   */\n  async function * findPeer (peerId, options = {}) {\n    const res = await api.post('dht/findpeer', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return findPeer\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createFindProvs = configure(api => {\n  /**\n   * @type {DHTAPI[\"findProvs\"]}\n   */\n  async function * findProvs (cid, options = {}) {\n    const res = await api.post('dht/findprovs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return findProvs\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {DHTAPI[\"get\"]}\n   */\n  async function * get (key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        // arg: base36.encode(key),\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return get\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nexport const createProvide = configure(api => {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  async function * provide (cids, options = { recursive: false }) {\n    /** @type {CID[]} */\n    const cidArr = Array.isArray(cids) ? cids : [cids]\n\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return provide\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  async function * put (key, value, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      ...(\n        await multipartRequest([value], controller, options.headers)\n      )\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return put\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createQuery = configure(api => {\n  /**\n   * @type {DHTAPI[\"query\"]}\n   */\n  async function * query (peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return query\n})\n","import { createFindPeer } from './find-peer.js'\nimport { createFindProvs } from './find-provs.js'\nimport { createGet } from './get.js'\nimport { createProvide } from './provide.js'\nimport { createPut } from './put.js'\nimport { createQuery } from './query.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createDht (config) {\n  return {\n    findPeer: createFindPeer(config),\n    findProvs: createFindProvs(config),\n    get: createGet(config),\n    provide: createProvide(config),\n    put: createPut(config),\n    query: createQuery(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createCmds = configure(api => {\n  /**\n   * @type {DiagAPI[\"cmds\"]}\n   */\n  async function cmds (options = {}) {\n    const res = await api.post('diag/cmds', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return cmds\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createNet = configure(api => {\n  /**\n   * @type {DiagAPI[\"net\"]}\n   */\n  async function net (options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    return res.json()\n  }\n  return net\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createSys = configure(api => {\n  /**\n   * @type {DiagAPI[\"sys\"]}\n   */\n  async function sys (options = {}) {\n    const res = await api.post('diag/sys', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return sys\n})\n","import { createCmds } from './cmds.js'\nimport { createNet } from './net.js'\nimport { createSys } from './sys.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createDiag (config) {\n  return {\n    cmds: createCmds(config),\n    net: createNet(config),\n    sys: createSys(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createChmod = configure(api => {\n  /**\n   * @type {FilesAPI[\"chmod\"]}\n   */\n  async function chmod (path, mode, options = {}) {\n    const res = await api.post('files/chmod', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        mode,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return chmod\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createCp = configure(api => {\n  /**\n   * @type {FilesAPI[\"cp\"]}\n   */\n  async function cp (sources, destination, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const sourceArr = Array.isArray(sources) ? sources : [sources]\n\n    const res = await api.post('files/cp', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sourceArr.concat(destination).map(src => CID.asCID(src) ? `/ipfs/${src}` : src),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return cp\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createFlush = configure(api => {\n  /**\n   * @type {FilesAPI[\"flush\"]}\n   */\n  async function flush (path, options = {}) {\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path')\n    }\n\n    const res = await api.post('files/flush', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return CID.parse(data.Cid)\n  }\n  return flush\n})\n","import { objectToCamel } from './object-to-camel.js'\n\n/**\n * @param {Record<string, any>} entry\n */\nexport function objectToCamelWithMetadata (entry) {\n  const file = objectToCamel(entry)\n\n  if (Object.prototype.hasOwnProperty.call(file, 'mode')) {\n    file.mode = parseInt(file.mode, 8)\n  }\n\n  if (Object.prototype.hasOwnProperty.call(file, 'mtime')) {\n    file.mtime = {\n      secs: file.mtime,\n      nsecs: file.mtimeNsecs || 0\n    }\n\n    delete file.mtimeNsecs\n  }\n\n  return file\n}\n","import { CID } from 'multiformats/cid'\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\nexport const createLs = configure(api => {\n  /**\n   * @type {FilesAPI[\"ls\"]}\n   */\n  async function * ls (path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path')\n    }\n\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: CID.asCID(path) ? `/ipfs/${path}` : path,\n        // default long to true, diverges from go-ipfs where its false by default\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      // go-ipfs does not yet support the \"stream\" option\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata(entry))\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata(result))\n      }\n    }\n  }\n  return ls\n})\n\n/**\n * @param {*} entry\n */\nfunction toCoreInterface (entry) {\n  if (entry.hash) {\n    entry.cid = CID.parse(entry.hash)\n  }\n\n  delete entry.hash\n\n  entry.type = entry.type === 1 ? 'directory' : 'file'\n\n  return entry\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMkdir = configure(api => {\n  /**\n   * @type {FilesAPI[\"mkdir\"]}\n   */\n  async function mkdir (path, options = {}) {\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return mkdir\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMv = configure(api => {\n  /**\n   * @type {FilesAPI[\"mv\"]}\n   */\n  async function mv (sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources]\n    }\n\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    })\n    await res.text()\n  }\n\n  return mv\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n// @ts-expect-error no types\nimport toIterable from 'stream-to-it/source.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRead = configure(api => {\n  /**\n   * @type {FilesAPI[\"read\"]}\n   */\n  async function * read (path, options = {}) {\n    const res = await api.post('files/read', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * toIterable(res.body)\n  }\n  return read\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport HTTP from 'ipfs-utils/src/http.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {FilesAPI[\"rm\"]}\n   */\n  async function rm (path, options = {}) {\n    const res = await api.post('files/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const body = await res.text()\n    // we don't expect text body to be ever present\n    // (if so, it means an error such as https://github.com/ipfs/go-ipfs/issues/8606)\n    if (body !== '') {\n      /** @type {Error} */\n      const error = new HTTP.HTTPError(res)\n      error.message = body\n      throw error\n    }\n  }\n  return rm\n})\n","import { CID } from 'multiformats/cid'\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {FilesAPI[\"stat\"]}\n   */\n  async function stat (path, options = {}) {\n    const res = await api.post('files/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    data.WithLocality = data.WithLocality || false\n    return toCoreInterface(objectToCamelWithMetadata(data))\n  }\n  return stat\n})\n\n/**\n * @param {*} entry\n */\nfunction toCoreInterface (entry) {\n  entry.cid = CID.parse(entry.hash)\n  delete entry.hash\n  return entry\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createTouch = configure(api => {\n  /**\n   * @type {FilesAPI[\"touch\"]}\n   */\n  async function touch (path, options = {}) {\n    const res = await api.post('files/touch', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return touch\n})\n","import { modeToString } from '../lib/mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\nimport { configure } from '../lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createWrite = configure(api => {\n  /**\n   * @type {FilesAPI[\"write\"]}\n   */\n  async function write (path, input, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...(\n        await multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return write\n})\n","import { createChmod } from './chmod.js'\nimport { createCp } from './cp.js'\nimport { createFlush } from './flush.js'\nimport { createLs } from './ls.js'\nimport { createMkdir } from './mkdir.js'\nimport { createMv } from './mv.js'\nimport { createRead } from './read.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\nimport { createTouch } from './touch.js'\nimport { createWrite } from './write.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createFiles (config) {\n  return {\n    chmod: createChmod(config),\n    cp: createCp(config),\n    flush: createFlush(config),\n    ls: createLs(config),\n    mkdir: createMkdir(config),\n    mv: createMv(config),\n    read: createRead(config),\n    rm: createRm(config),\n    stat: createStat(config),\n    touch: createTouch(config),\n    write: createWrite(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createExport = configure(api => {\n  /**\n   * @type {KeyAPI[\"export\"]}\n   */\n  const exportKey = async (name, password, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return exportKey\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createGen = configure(api => {\n  /**\n   * @type {KeyAPI[\"gen\"]}\n   */\n  async function gen (name, options = { type: 'Ed25519' }) {\n    const res = await api.post('key/gen', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return gen\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  async function importKey (name, pem, password, options = {}) {\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return importKey\n})\n","import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createInfo = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return info\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {KeyAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('key/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Keys || []).map((/** @type {any} **/ k) => objectToCamel(k))\n  }\n  return list\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createRename = configure(api => {\n  /**\n   * @type {KeyAPI[\"rename\"]}\n   */\n  async function rename (oldName, newName, options = {}) {\n    const res = await api.post('key/rename', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          oldName,\n          newName\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return rename\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {KeyAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    const res = await api.post('key/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data.Keys[0])\n  }\n  return rm\n})\n","import { createExport } from './export.js'\nimport { createGen } from './gen.js'\nimport { createImport } from './import.js'\nimport { createInfo } from './info.js'\nimport { createList } from './list.js'\nimport { createRename } from './rename.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createKey (config) {\n  return {\n    export: createExport(config),\n    gen: createGen(config),\n    import: createImport(config),\n    info: createInfo(config),\n    list: createList(config),\n    rename: createRename(config),\n    rm: createRm(config)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createLevel = configure(api => {\n  /**\n   * @type {LogAPI[\"level\"]}\n   */\n  async function level (subsystem, level, options = {}) {\n    const res = await api.post('log/level', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          subsystem,\n          level\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return objectToCamel(await res.json())\n  }\n  return level\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createLs = configure(api => {\n  /**\n   * @type {LogAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const res = await api.post('log/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n    return data.Strings\n  }\n  return ls\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createTail = configure(api => {\n  /**\n   * @type {LogAPI[\"tail\"]}\n   */\n  async function * tail (options = {}) {\n    const res = await api.post('log/tail', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return tail\n})\n","import { createLevel } from './level.js'\nimport { createLs } from './ls.js'\nimport { createTail } from './tail.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createLog (config) {\n  return {\n    level: createLevel(config),\n    ls: createLs(config),\n    tail: createTail(config)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {NameAPI[\"publish\"]}\n   */\n  async function publish (path, options = {}) {\n    const res = await api.post('name/publish', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return publish\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {NameAPI[\"resolve\"]}\n   */\n  async function * resolve (path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      yield result.Path\n    }\n  }\n  return resolve\n})\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createCancel = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"cancel\"]}\n   */\n  async function cancel (name, options = {}) {\n    const res = await api.post('name/pubsub/cancel', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return cancel\n})\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createState = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"state\"]}\n   */\n  async function state (options = {}) {\n    const res = await api.post('name/pubsub/state', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return state\n})\n","import { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createSubs = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"subs\"]}\n   */\n  async function subs (options = {}) {\n    const res = await api.post('name/pubsub/subs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Strings || []\n  }\n  return subs\n})\n","import { createCancel } from './cancel.js'\nimport { createState } from './state.js'\nimport { createSubs } from './subs.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createPubsub (config) {\n  return {\n    cancel: createCancel(config),\n    state: createState(config),\n    subs: createSubs(config)\n  }\n}\n","import { createPublish } from './publish.js'\nimport { createResolve } from './resolve.js'\nimport { createPubsub } from './pubsub/index.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createName (config) {\n  return {\n    publish: createPublish(config),\n    resolve: createResolve(config),\n    pubsub: createPubsub(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createData = configure(api => {\n  /**\n   * @type {ObjectAPI[\"data\"]}\n   */\n  async function data (cid, options = {}) {\n    const res = await api.post('object/data', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.arrayBuffer()\n\n    return new Uint8Array(data, 0, data.byteLength)\n  }\n  return data\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ObjectAPI[\"get\"]}\n   */\n  async function get (cid, options = {}) {\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      Data: uint8ArrayFromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map((/** @type {any} */ link) => ({\n        Name: link.Name,\n        Hash: CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    }\n  }\n  return get\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createLinks = configure(api => {\n  /**\n   * @type {ObjectAPI[\"links\"]}\n   */\n  async function links (cid, options = {}) {\n    const res = await api.post('object/links', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Links || []).map((/** @type {any} */ l) => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }))\n  }\n  return links\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createNew = configure(api => {\n  /**\n   * @type {ObjectAPI[\"new\"]}\n   */\n  async function newObject (options = {}) {\n    const res = await api.post('object/new', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.template,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return newObject\n})\n","import { configure } from '../lib/configure.js'\nimport { createPut as createDagPut } from '../dag/put.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createPut = (codecs, options) => {\n  const fn = configure((api) => {\n    const dagPut = createDagPut(codecs, options)\n\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n    async function put (obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        storeCodec: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 1\n      })\n    }\n    return put\n  })\n\n  return fn(options)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {ObjectAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const output = await res.json()\n\n    return {\n      ...output,\n      Hash: CID.parse(output.Hash)\n    }\n  }\n  return stat\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createAddLink = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"addLink\"]}\n   */\n  async function addLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/add-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-expect-error loose types\n          dLink.Name || dLink.name || '',\n          // @ts-expect-error loose types\n          (dLink.Hash || dLink.cid || '').toString() || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n\n  return addLink\n})\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport { abortSignal } from '../../lib/abort-signal.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createAppendData = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"appendData\"]}\n   */\n  async function appendData (cid, data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('object/patch/append-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return appendData\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createRmLink = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"rmLink\"]}\n   */\n  async function rmLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/rm-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-expect-error loose types\n          dLink.Name || dLink.name || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return rmLink\n})\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport { abortSignal } from '../../lib/abort-signal.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createSetData = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"setData\"]}\n   */\n  async function setData (cid, data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('object/patch/set-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`\n        ],\n        ...options\n      }),\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return setData\n})\n","import { createAddLink } from './add-link.js'\nimport { createAppendData } from './append-data.js'\nimport { createRmLink } from './rm-link.js'\nimport { createSetData } from './set-data.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createPatch (config) {\n  return {\n    addLink: createAddLink(config),\n    appendData: createAppendData(config),\n    rmLink: createRmLink(config),\n    setData: createSetData(config)\n  }\n}\n","import { createData } from './data.js'\nimport { createGet } from './get.js'\nimport { createLinks } from './links.js'\nimport { createNew } from './new.js'\nimport { createPut } from './put.js'\nimport { createStat } from './stat.js'\nimport { createPatch } from './patch/index.js'\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} config\n */\nexport function createObject (codecs, config) {\n  return {\n    data: createData(config),\n    get: createGet(config),\n    links: createLinks(config),\n    new: createNew(config),\n    put: createPut(codecs, config),\n    stat: createStat(config),\n    patch: createPatch(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createAddAll = configure(api => {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    for await (const { path, recursive, metadata } of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid)\n          }\n          continue\n        }\n\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return addAll\n})\n","import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createAdd (config) {\n  const all = createAddAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"add\"]}\n     */\n    async function add (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return add\n  })(config)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {string} type\n * @param {string} cid\n * @param {Record<string, string>} metadata\n */\nfunction toPin (type, cid, metadata) {\n  /** @type {import('ipfs-core-types/src/pin').LsResult} */\n  const pin = {\n    type,\n    cid: CID.parse(cid)\n  }\n\n  if (metadata) {\n    pin.metadata = metadata\n  }\n\n  return pin\n}\n\nexport const createLs = configure(api => {\n  /**\n   * @type {PinAPI[\"ls\"]}\n   */\n  async function * ls (options = {}) {\n    /** @type {any[]} */\n    let paths = []\n\n    if (options.paths) {\n      paths = Array.isArray(options.paths) ? options.paths : [options.paths]\n    }\n\n    const res = await api.post('pin/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        arg: paths.map(path => `${path}`),\n        stream: true\n      }),\n      headers: options.headers\n    })\n\n    for await (const pin of res.ndjson()) {\n      if (pin.Keys) { // non-streaming response\n        for (const cid of Object.keys(pin.Keys)) {\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata)\n        }\n        return\n      }\n\n      yield toPin(pin.Type, pin.Cid, pin.Metadata)\n    }\n  }\n  return ls\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createRmAll = configure(api => {\n  /**\n   * @type {PinAPI[\"rmAll\"]}\n   */\n  async function * rmAll (source, options = {}) {\n    for await (const { path, recursive } of normaliseInput(source)) {\n      const searchParams = new URLSearchParams(options.searchParams)\n      searchParams.append('arg', `${path}`)\n\n      if (recursive != null) searchParams.set('recursive', String(recursive))\n\n      const res = await api.post('pin/rm', {\n        signal: options.signal,\n        headers: options.headers,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: `${path}`,\n          recursive\n        })\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          yield * pin.Pins.map((/** @type {string} */ cid) => CID.parse(cid))\n          continue\n        }\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return rmAll\n})\n","import { createRmAll } from './rm-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport const createRm = (config) => {\n  const all = createRmAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"rm\"]}\n     */\n    async function rm (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return rm\n  })(config)\n}\n","import { CID } from 'multiformats/cid'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n */\n\n/**\n * @param {object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\nexport const decodePin = ({ Name: name, Status: status, Cid: cid }) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  }\n}\n\n/**\n * @param {any} service\n * @returns {string}\n */\nexport const encodeService = (service) => {\n  if (typeof service === 'string' && service !== '') {\n    return service\n  } else {\n    throw new TypeError('service name must be passed')\n  }\n}\n\n/**\n * @param {any} cid\n * @returns {string}\n */\nexport const encodeCID = (cid) => {\n  if (CID.asCID(cid)) {\n    return cid.toString()\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`)\n  }\n}\n\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\nexport const encodeQuery = ({ service, cid, name, status, all }) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  })\n\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value))\n    }\n  }\n\n  if (status) {\n    for (const value of status) {\n      query.append('status', value)\n    }\n  }\n\n  return query\n}\n\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\nexport const encodeAddParams = ({ cid, service, background, name, origins }) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  })\n\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString())\n    }\n  }\n\n  return params\n}\n","import { encodeAddParams, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningAPI[\"add\"]}\n   */\n  async function add (cid, { timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/add', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeAddParams({ cid, ...query })\n    })\n\n    return decodePin(await response.json())\n  }\n\n  return add\n}\n","import { encodeQuery, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningAPI[\"ls\"]}\n   */\n  async function * ls ({ timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    })\n\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin)\n    }\n  }\n\n  return ls\n}\n","import { encodeQuery } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningAPI[\"rm\"]}\n   */\n  async function rm ({ timeout, signal, headers, ...query }) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: false\n      })\n    })\n  }\n\n  return rm\n}\n","import { encodeQuery } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createRmAll (client) {\n  /**\n   * @type {RemotePiningAPI[\"rmAll\"]}\n   */\n  async function rmAll ({ timeout, signal, headers, ...query }) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: true\n      })\n    })\n  }\n\n  return rmAll\n}\n","/**\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\n */\n\n/**\n * @param {URL} url\n */\nexport function encodeEndpoint (url) {\n  const href = String(url)\n  if (href === 'undefined') {\n    throw Error('endpoint is required')\n  }\n  // Workaround trailing `/` issue in go-ipfs\n  // @see https://github.com/ipfs/go-ipfs/issues/7826\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href\n}\n\n/**\n * @param {any} json\n * @returns {RemotePinServiceWithStat}\n */\nexport function decodeRemoteService (json) {\n  return {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint),\n    ...(json.Stat && { stat: decodeStat(json.Stat) })\n  }\n}\n\n/**\n * @param {any} json\n * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\n */\nexport function decodeStat (json) {\n  switch (json.Status) {\n    case 'valid': {\n      const { Pinning, Pinned, Queued, Failed } = json.PinCount\n      return {\n        status: 'valid',\n        pinCount: {\n          queued: Queued,\n          pinning: Pinning,\n          pinned: Pinned,\n          failed: Failed\n        }\n      }\n    }\n    case 'invalid': {\n      return { status: 'invalid' }\n    }\n    default: {\n      return { status: json.Status }\n    }\n  }\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { encodeEndpoint } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"add\"]}\n   */\n  async function add (name, options) {\n    const { endpoint, key, headers, timeout, signal } = options\n\n    await client.post('pin/remote/service/add', {\n      timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [name, encodeEndpoint(endpoint), key]\n      }),\n      headers\n    })\n  }\n\n  return add\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { decodeRemoteService } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    // @ts-expect-error cannot derive option type from typedef\n    const { stat, headers, timeout, signal } = options\n\n    const response = await client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n    })\n\n    /** @type {{RemoteServices: object[]}} */\n    const { RemoteServices } = await response.json()\n\n    return RemoteServices.map(decodeRemoteService)\n  }\n\n  return ls\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    await client.post('pin/remote/service/rm', {\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({\n        arg: name\n      })\n    })\n  }\n\n  return rm\n}\n","import { Client } from '../../../lib/core.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../../../types').Options} config\n */\nexport function createService (config) {\n  const client = new Client(config)\n\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client)\n  }\n}\n","import { Client } from '../../lib/core.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\nimport { createRmAll } from './rm-all.js'\nimport { createService } from './service/index.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createRemote (config) {\n  const client = new Client(config)\n\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client),\n    rmAll: createRmAll(client),\n    service: createService(config)\n  }\n}\n","import { createAddAll } from './add-all.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRmAll } from './rm-all.js'\nimport { createRm } from './rm.js'\nimport { createRemote } from './remote/index.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createPin (config) {\n  return {\n    addAll: createAddAll(config),\n    add: createAdd(config),\n    ls: createLs(config),\n    rmAll: createRmAll(config),\n    rm: createRm(config),\n    remote: createRemote(config)\n  }\n}\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { base64url } from 'multiformats/bases/base64'\n\n/* HTTP RPC:\n * - wraps binary data in multibase. base64url is used to avoid issues\n *   when a binary data is passed as search param in URL.\n *   Historical context: https://github.com/ipfs/go-ipfs/issues/7939\n *   Multibase wrapping introduced in: https://github.com/ipfs/go-ipfs/pull/8183\n */\n\n/**\n * @param {Array<string>} strings\n * @returns {Array<string>} strings\n */\nconst rpcArrayToTextArray = strings => {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText)\n  }\n  return strings\n}\n\n/**\n * @param {string} mb\n * @returns {string}\n */\nconst rpcToText = mb => uint8ArrayToString(rpcToBytes(mb))\n\n/**\n * @param {string} mb\n * @returns {Uint8Array}\n */\nconst rpcToBytes = mb => base64url.decode(mb)\n\n/**\n * @param {string} mb\n * @returns {bigint}\n */\nconst rpcToBigInt = mb => BigInt(`0x${uint8ArrayToString(base64url.decode(mb), 'base16')}`)\n\n/**\n * @param {string} text\n * @returns {string}\n */\nconst textToUrlSafeRpc = text => base64url.encode(uint8ArrayFromString(text))\n\nexport { rpcArrayToTextArray, rpcToText, rpcToBytes, rpcToBigInt, textToUrlSafeRpc }\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { rpcArrayToTextArray } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createLs = configure(api => {\n  /**\n   * @type {PubsubAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const { Strings } = await (await api.post('pubsub/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return rpcArrayToTextArray(Strings) || []\n  }\n  return ls\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPeers = configure(api => {\n  /**\n   * @type {PubsubAPI[\"peers\"]}\n   */\n  async function peers (topic, options = {}) {\n    const res = await api.post('pubsub/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: textToUrlSafeRpc(topic),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return peers\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {PubsubAPI[\"publish\"]}\n   */\n  async function publish (topic, data, options = {}) {\n    const searchParams = toUrlSearchParams({\n      arg: textToUrlSafeRpc(topic),\n      ...options\n    })\n\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('pubsub/pub', {\n      signal,\n      searchParams,\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return publish\n})\n","import { logger } from '@libp2p/logger'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { textToUrlSafeRpc, rpcToText, rpcToBytes, rpcToBigInt } from '../lib/http-rpc-wire-format.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\nconst log = logger('ipfs-http-client:pubsub:subscribe')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {(err: Error, fatal: boolean, msg?: Message) => void} ErrorHandlerFn\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions & { onError?: ErrorHandlerFn }>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker\n */\nexport const createSubscribe = (options, subsTracker) => {\n  return configure((api) => {\n    /**\n     * @type {PubsubAPI[\"subscribe\"]}\n     */\n    async function subscribe (topic, handler, options = {}) { // eslint-disable-line require-await\n      options.signal = subsTracker.subscribe(topic, handler, options.signal)\n\n      /** @type {(value?: any) => void} */\n      let done\n      /** @type {(error: Error) => void} */\n      let fail\n\n      const result = new Promise((resolve, reject) => {\n        done = resolve\n        fail = reject\n      })\n\n      // In Firefox, the initial call to fetch does not resolve until some data\n      // is received. If this doesn't happen within 1 second assume success\n      const ffWorkaround = setTimeout(() => done(), 1000)\n\n      // Do this async to not block Firefox\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: textToUrlSafeRpc(topic),\n          ...options\n        }),\n        headers: options.headers\n      })\n        .catch((err) => {\n          // Initial subscribe fail, ensure we clean up\n          subsTracker.unsubscribe(topic, handler)\n\n          fail(err)\n        })\n        .then((response) => {\n          clearTimeout(ffWorkaround)\n\n          if (!response) {\n            // if there was no response, the subscribe failed\n            return\n          }\n\n          readMessages(response, {\n            onMessage: (message) => {\n              if (!handler) {\n                return\n              }\n\n              if (typeof handler === 'function') {\n                handler(message)\n                return\n              }\n\n              if (typeof handler.handleEvent === 'function') {\n                handler.handleEvent(message)\n              }\n            },\n            onEnd: () => subsTracker.unsubscribe(topic, handler),\n            onError: options.onError\n          })\n\n          done()\n        })\n\n      return result\n    }\n    return subscribe\n  })(options)\n}\n\n/**\n * @param {import('ipfs-utils/src/types').ExtendedResponse} response\n * @param {object} options\n * @param {(message: Message) => void} options.onMessage\n * @param {() => void} options.onEnd\n * @param {ErrorHandlerFn} [options.onError]\n */\nasync function readMessages (response, { onMessage, onEnd, onError }) {\n  onError = onError || log\n\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue\n        }\n\n        if (msg.from != null && msg.seqno != null) {\n          onMessage({\n            type: 'signed',\n            from: peerIdFromString(msg.from),\n            data: rpcToBytes(msg.data),\n            sequenceNumber: rpcToBigInt(msg.seqno),\n            topic: rpcToText(msg.topicIDs[0]),\n            key: rpcToBytes(msg.key ?? 'u'),\n            signature: rpcToBytes(msg.signature ?? 'u')\n          })\n        } else {\n          onMessage({\n            type: 'unsigned',\n            data: rpcToBytes(msg.data),\n            topic: rpcToText(msg.topicIDs[0])\n          })\n        }\n      } catch (/** @type {any} */ err) {\n        err.message = `Failed to parse pubsub message: ${err.message}`\n        onError(err, false, msg) // Not fatal\n      }\n    }\n  } catch (/** @type {any} */ err) {\n    if (!isAbortError(err)) {\n      onError(err, true) // Fatal\n    }\n  } finally {\n    onEnd()\n  }\n}\n\n/**\n * @param {Error & {type?:string}} error\n * @returns {boolean}\n */\nconst isAbortError = error => {\n  switch (error.type) {\n    case 'aborted':\n      return true\n    // It is `abort` in Electron instead of `aborted`\n    case 'abort':\n      return true\n    default:\n      // FIXME: In testing with Chrome, err.type is undefined (should not be!)\n      // Temporarily use the name property instead.\n      return error.name === 'AbortError'\n  }\n}\n","\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker\n */\nexport const createUnsubscribe = (options, subsTracker) => {\n  /**\n   * @type {PubsubAPI[\"unsubscribe\"]}\n   */\n  async function unsubscribe (topic, handler) {\n    subsTracker.unsubscribe(topic, handler)\n  }\n  return unsubscribe\n}\n","\n/**\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {import('@libp2p/interfaces/events').EventHandler<Message>} MessageHandlerFn\n *\n * @typedef {object} Subscription\n * @property {MessageHandlerFn} handler\n * @property {AbortController} controller\n */\n\nexport class SubscriptionTracker {\n  constructor () {\n    /** @type {Map<string, Subscription[]>} */\n    this._subs = new Map()\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} handler\n   * @param {AbortSignal} [signal]\n   */\n  subscribe (topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || []\n\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${topic} with this handler`)\n    }\n\n    // Create controller so a call to unsubscribe can cancel the request\n    const controller = new AbortController()\n\n    this._subs.set(topic, [{ handler, controller }].concat(topicSubs))\n\n    // If there is an external signal, forward the abort event\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler))\n    }\n\n    return controller.signal\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} [handler]\n   */\n  unsubscribe (topic, handler) {\n    const subs = this._subs.get(topic) || []\n    let unsubs\n\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler))\n      unsubs = subs.filter(s => s.handler === handler)\n    } else {\n      this._subs.set(topic, [])\n      unsubs = subs\n    }\n\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic)\n    }\n\n    unsubs.forEach(s => s.controller.abort())\n  }\n}\n","import { createLs } from './ls.js'\nimport { createPeers } from './peers.js'\nimport { createPublish } from './publish.js'\nimport { createSubscribe } from './subscribe.js'\nimport { createUnsubscribe } from './unsubscribe.js'\nimport { SubscriptionTracker } from './subscription-tracker.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createPubsub (config) {\n  const subscriptionTracker = new SubscriptionTracker()\n\n  return {\n    ls: createLs(config),\n    peers: createPeers(config),\n    publish: createPublish(config),\n    subscribe: createSubscribe(config, subscriptionTracker),\n    unsubscribe: createUnsubscribe(config, subscriptionTracker)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createLocal = configure(api => {\n  /**\n   * @type {RefsAPI[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    const res = await api.post('refs/local', {\n      signal: options.signal,\n      transform: objectToCamel,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return refsLocal\n})\n","import { CID } from 'multiformats/cid'\nimport { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { createLocal } from './local.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createRefs = configure((api, opts) => {\n  /**\n   * @type {RefsAPI[\"refs\"]}\n   */\n  const refs = async function * (args, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const argsArr = Array.isArray(args) ? args : [args]\n\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => `${arg instanceof Uint8Array ? CID.decode(arg) : arg}`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n\n  return Object.assign(refs, {\n    local: createLocal(opts)\n  })\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createGc = configure(api => {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  async function * gc (options = {}) {\n    const res = await api.post('repo/gc', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (res) => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n        }\n      }\n    })\n\n    yield * res.ndjson()\n  }\n  return gc\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {RepoAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    }\n  }\n  return stat\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return res.Version\n  }\n  return version\n})\n","import { createGc } from './gc.js'\nimport { createStat } from './stat.js'\nimport { createVersion } from './version.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createRepo (config) {\n  return {\n    gc: createGc(config),\n    stat: createStat(config),\n    version: createVersion(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/stats').API<HTTPClientExtraOptions>} StatsAPI\n */\n\nexport const createBw = configure(api => {\n  /**\n   * @type {StatsAPI[\"bw\"]}\n   */\n  async function * bw (options = {}) {\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (stats) => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    })\n\n    yield * res.ndjson()\n  }\n  return bw\n})\n","import { createStat as createBitswap } from '../bitswap/stat.js'\nimport { createStat as createRepo } from '../repo/stat.js'\nimport { createBw } from './bw.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createStats (config) {\n  return {\n    bitswap: createBitswap(config),\n    repo: createRepo(config),\n    bw: createBw(config)\n  }\n}\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createAddrs = configure(api => {\n  /**\n   * @type {SwarmAPI[\"addrs\"]}\n   */\n  async function addrs (options = {}) {\n    const res = await api.post('swarm/addrs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Addrs: Record<string, string[]> }} */\n    const { Addrs } = await res.json()\n\n    return Object.keys(Addrs).map(id => ({\n      id: peerIdFromString(id),\n      addrs: (Addrs[id] || []).map(a => multiaddr(a))\n    }))\n  }\n  return addrs\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createConnect = configure(api => {\n  /**\n   * @type {SwarmAPI[\"connect\"]}\n   */\n  async function connect (addr, options = {}) {\n    const res = await api.post('swarm/connect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return connect\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createDisconnect = configure(api => {\n  /**\n   * @type {SwarmAPI[\"disconnect\"]}\n   */\n  async function disconnect (addr, options = {}) {\n    const res = await api.post('swarm/disconnect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return disconnect\n})\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createLocalAddrs = configure(api => {\n  /**\n   * @type {SwarmAPI[\"localAddrs\"]}\n   */\n  async function localAddrs (options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Strings: string[] }} */\n    const { Strings } = await res.json()\n\n    return (Strings || []).map(a => multiaddr(a))\n  }\n  return localAddrs\n})\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createPeers = configure(api => {\n  /**\n   * @type {SwarmAPI[\"peers\"]}\n   */\n  async function peers (options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Peers: { Peer: string, Addr: string, Muxer?: string, Latency?: string, Streams?: string[], Direction?: 0 | 1 }[] }} */\n    const { Peers } = await res.json()\n\n    return (Peers || []).map(peer => {\n      return {\n        addr: multiaddr(peer.Addr),\n        peer: peerIdFromString(peer.Peer),\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      }\n    })\n  }\n  return peers\n})\n","import { createAddrs } from './addrs.js'\nimport { createConnect } from './connect.js'\nimport { createDisconnect } from './disconnect.js'\nimport { createLocalAddrs } from './local-addrs.js'\nimport { createPeers } from './peers.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createSwarm (config) {\n  return {\n    addrs: createAddrs(config),\n    connect: createConnect(config),\n    disconnect: createDisconnect(config),\n    localAddrs: createLocalAddrs(config),\n    peers: createPeers(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { abortSignal } from './lib/abort-signal.js'\n\n/**\n * @typedef {import('ipfs-utils/src/types').ProgressFn} IPFSUtilsHttpUploadProgressFn\n * @typedef {import('ipfs-core-types/src/root').AddProgressFn} IPFSCoreAddProgressFn\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n * @typedef {import('ipfs-core-types/src/root').AddResult} AddResult\n */\n\nexport const createAddAll = configure((api) => {\n  /**\n   * @type {RootAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body, total, parts } =\n      await multipartRequest(source, controller, options.headers)\n\n    // In browser response body only starts streaming once upload is\n    // complete, at which point all the progress updates are invalid. If\n    // length of the content is computable we can interpret progress from\n    // `{ total, loaded}` passed to `onUploadProgress` and `multipart.total`\n    // in which case we disable progress updates to be written out.\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function'\n      ? createProgressHandler(total, parts, options.progress)\n      : [undefined, undefined]\n\n    const res = await api.post('add', {\n      searchParams: toUrlSearchParams({\n        'stream-channels': true,\n        ...options,\n        progress: Boolean(progressFn)\n      }),\n      onUploadProgress,\n      signal,\n      headers,\n      body\n    })\n\n    for await (let file of res.ndjson()) {\n      file = objectToCamel(file)\n\n      if (file.hash !== undefined) {\n        yield toCoreInterface(file)\n      } else if (progressFn) {\n        progressFn(file.bytes || 0, file.name)\n      }\n    }\n  }\n  return addAll\n})\n\n/**\n * Returns simple progress callback when content length isn't computable or a\n * progress event handler that calculates progress from upload progress events.\n *\n * @param {number} total\n * @param {{name:string, start:number, end:number}[]|null} parts\n * @param {IPFSCoreAddProgressFn} progress\n * @returns {[IPFSCoreAddProgressFn|undefined, IPFSUtilsHttpUploadProgressFn|undefined]}\n */\nconst createProgressHandler = (total, parts, progress) =>\n  parts ? [undefined, createOnUploadProgress(total, parts, progress)] : [progress, undefined]\n\n/**\n * Creates a progress handler that interpolates progress from upload progress\n * events and total size of the content that is added.\n *\n * @param {number} size - actual content size\n * @param {{name:string, start:number, end:number}[]} parts\n * @param {IPFSCoreAddProgressFn} progress\n * @returns {IPFSUtilsHttpUploadProgressFn}\n */\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0\n  const count = parts.length\n  return ({ loaded, total }) => {\n    // Derive position from the current progress.\n    const position = Math.floor(loaded / total * size)\n    while (index < count) {\n      const { start, end, name } = parts[index]\n      // If within current part range report progress and break the loop\n      if (position < end) {\n        progress(position - start, name)\n        break\n      // If passed current part range report final byte for the chunk and\n      // move to next one.\n      } else {\n        progress(end - start, name)\n        index += 1\n      }\n    }\n  }\n}\n\n/**\n * @param {object} input\n * @param {string} input.name\n * @param {string} input.hash\n * @param {string} input.size\n * @param {string} [input.mode]\n * @param {number} [input.mtime]\n * @param {number} [input.mtimeNsecs]\n */\nfunction toCoreInterface ({ name, hash, size, mode, mtime, mtimeNsecs }) {\n  /** @type {AddResult} */\n  const output = {\n    path: name,\n    cid: CID.parse(hash),\n    size: parseInt(size)\n  }\n\n  if (mode != null) {\n    output.mode = parseInt(mode, 8)\n  }\n\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    }\n  }\n\n  return output\n}\n","import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from './lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\nexport function createAdd (options) {\n  const all = createAddAll(options)\n  return configure(() => {\n    /**\n     * @type {RootAPI[\"add\"]}\n     */\n    async function add (input, options = {}) {\n      // @ts-expect-error - last may return undefined if source is empty\n      return await last(all(normaliseInput(input), options))\n    }\n    return add\n  })(options)\n}\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCat = configure(api => {\n  /**\n   * @type {RootAPI[\"cat\"]}\n   */\n  async function * cat (path, options = {}) {\n    const res = await api.post('cat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return cat\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCommands = configure(api => {\n  /**\n   * @type {RootAPI[\"commands\"]}\n   */\n  const commands = async (options = {}) => {\n    const res = await api.post('commands', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return commands\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createDns = configure(api => {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Path\n  }\n\n  return dns\n})\n","import { configure } from './lib/configure.js'\n\nexport const createGetEndpointConfig = configure(api => {\n  return () => {\n    const url = new URL(api.opts.base || '')\n    return {\n      host: url.hostname,\n      port: url.port,\n      protocol: url.protocol,\n      pathname: url.pathname,\n      'api-path': url.pathname\n    }\n  }\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {RootAPI[\"get\"]}\n   */\n  async function * get (path, options = {}) {\n    /** @type {Record<string, any>} */\n    const opts = {\n      arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n      ...options\n    }\n\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel\n      delete opts.compressionLevel\n    }\n\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return get\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createId = configure(api => {\n  /**\n   * @type {RootAPI[\"id\"]}\n   */\n  async function id (options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    const output = {\n      ...objectToCamel(data)\n    }\n\n    output.id = peerIdFromString(output.id)\n\n    if (output.addresses) {\n      output.addresses = output.addresses.map((/** @type {string} */ ma) => multiaddr(ma))\n    }\n\n    // @ts-expect-error server output is not typed\n    return output\n  }\n  return id\n})\n","import { createId } from './id.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\nexport const createIsOnline = options => {\n  const id = createId(options)\n\n  /**\n   * @type {RootAPI[\"isOnline\"]}\n   */\n  async function isOnline (options = {}) {\n    const res = await id(options)\n\n    return Boolean(res && res.addresses && res.addresses.length)\n  }\n  return isOnline\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { createStat } from './files/stat.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createLs = configure((api, opts) => {\n  /**\n   * @type {RootAPI[\"ls\"]}\n   */\n  async function * ls (path, options = {}) {\n    const pathStr = `${path instanceof Uint8Array ? CID.decode(path) : path}`\n\n    /**\n     * @param {*} link\n     */\n    async function mapLink (link) {\n      let hash = link.Hash\n\n      if (hash.includes('/')) {\n        // the hash is a path, but we need the CID\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${hash}`\n        const stats = await createStat(opts)(ipfsPath)\n\n        hash = stats.cid\n      } else {\n        hash = CID.parse(hash)\n      }\n\n      /** @type {import('ipfs-core-types/src/root').IPFSEntry} */\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${link.Name}` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      }\n\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8)\n      }\n\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = {\n          secs: link.Mtime\n        }\n\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs\n        }\n      }\n\n      return entry\n    }\n\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (let result of res.ndjson()) {\n      result = result.Objects\n\n      if (!result) {\n        throw new Error('expected .Objects in results')\n      }\n\n      result = result[0]\n      if (!result) {\n        throw new Error('expected one array in results.Objects')\n      }\n\n      const links = result.Links\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links')\n      }\n\n      if (!links.length) {\n        // no links, this is a file, yield a single result\n        yield mapLink(result)\n\n        return\n      }\n\n      yield * links.map(mapLink)\n    }\n  }\n  return ls\n})\n\n/**\n * @param {any} link\n */\nfunction typeOf (link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir'\n    case 2:\n      return 'file'\n    default:\n      return 'file'\n  }\n}\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createMount = configure(api => {\n  /**\n   * @type {RootAPI[\"mount\"]}\n   */\n  async function mount (options = {}) {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return objectToCamel(await res.json())\n  }\n  return mount\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createPing = configure(api => {\n  /**\n   * @type {RootAPI[\"ping\"]}\n   */\n  async function * ping (peerId, options = {}) {\n    const res = await api.post('ping', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${peerId}`,\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n  return ping\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {RootAPI[\"resolve\"]}\n   */\n  async function resolve (path, options = {}) {\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Path } = await res.json()\n    return Path\n  }\n  return resolve\n})\n","import { configure } from './lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStart = configure(api => {\n  /**\n   * @type {RootAPI[\"start\"]}\n   */\n  const start = async (options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return start\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStop = configure(api => {\n  /**\n   * @type {RootAPI[\"stop\"]}\n   */\n  async function stop (options = {}) {\n    const res = await api.post('shutdown', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return stop\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RootAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await api.post('version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return {\n      ...objectToCamel(await res.json()),\n      'ipfs-http-client': '1.0.0'\n    }\n  }\n\n  return version\n})\n","/* eslint-env browser */\n\nimport { Multibases } from 'ipfs-core-utils/multibases'\nimport { Multicodecs } from 'ipfs-core-utils/multicodecs'\nimport { Multihashes } from 'ipfs-core-utils/multihashes'\nimport * as dagPB from '@ipld/dag-pb'\nimport * as dagCBOR from '@ipld/dag-cbor'\nimport * as dagJSON from '@ipld/dag-json'\nimport * as dagJOSE from 'dag-jose'\nimport { identity } from 'multiformats/hashes/identity'\nimport { bases, hashes, codecs } from 'multiformats/basics'\nimport { createBitswap } from './bitswap/index.js'\nimport { createBlock } from './block/index.js'\nimport { createBootstrap } from './bootstrap/index.js'\nimport { createConfig } from './config/index.js'\nimport { createDag } from './dag/index.js'\nimport { createDht } from './dht/index.js'\nimport { createDiag } from './diag/index.js'\nimport { createFiles } from './files/index.js'\nimport { createKey } from './key/index.js'\nimport { createLog } from './log/index.js'\nimport { createName } from './name/index.js'\nimport { createObject } from './object/index.js'\nimport { createPin } from './pin/index.js'\nimport { createPubsub } from './pubsub/index.js'\nimport { createRefs } from './refs/index.js'\nimport { createRepo } from './repo/index.js'\nimport { createStats } from './stats/index.js'\nimport { createSwarm } from './swarm/index.js'\nimport { createAdd } from './add.js'\nimport { createAddAll } from './add-all.js'\nimport { createCat } from './cat.js'\nimport { createCommands } from './commands.js'\nimport { createDns } from './dns.js'\nimport { createGetEndpointConfig } from './get-endpoint-config.js'\nimport { createGet } from './get.js'\nimport { createId } from './id.js'\nimport { createIsOnline } from './is-online.js'\nimport { createLs } from './ls.js'\nimport { createMount } from './mount.js'\nimport { createPing } from './ping.js'\nimport { createResolve } from './resolve.js'\nimport { createStart } from './start.js'\nimport { createStop } from './stop.js'\nimport { createVersion } from './version.js'\nimport globSourceImport from 'ipfs-utils/src/files/glob-source.js'\n\n/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('./types').IPLDOptions} IPLDOptions\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('./types').EndpointConfig} EndpointConfig\n * @typedef {import('./types').IPFSHTTPClient} IPFSHTTPClient\n */\n\n/**\n * @param {Options} options\n */\nexport function create (options = {}) {\n  /**\n   * @type {BlockCodec}\n   */\n  const id = {\n    name: identity.name,\n    code: identity.code,\n    encode: (id) => id,\n    decode: (id) => id\n  }\n\n  /** @type {MultibaseCodec[]} */\n  const multibaseCodecs = Object.values(bases);\n\n  (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach(base => multibaseCodecs.push(base))\n\n  const multibases = new Multibases({\n    bases: multibaseCodecs,\n    loadBase: options.ipld && options.ipld.loadBase\n  })\n\n  /** @type {BlockCodec[]} */\n  const blockCodecs = Object.values(codecs);\n\n  [dagPB, dagCBOR, dagJSON, dagJOSE, id].concat((options.ipld && options.ipld.codecs) || []).forEach(codec => blockCodecs.push(codec))\n\n  const multicodecs = new Multicodecs({\n    codecs: blockCodecs,\n    loadCodec: options.ipld && options.ipld.loadCodec\n  })\n\n  /** @type {MultihashHasher[]} */\n  const multihashHashers = Object.values(hashes);\n\n  (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach(hasher => multihashHashers.push(hasher))\n\n  const multihashes = new Multihashes({\n    hashers: multihashHashers,\n    loadHasher: options.ipld && options.ipld.loadHasher\n  })\n\n  /** @type {IPFSHTTPClient} */\n  const client = {\n    add: createAdd(options),\n    addAll: createAddAll(options),\n    bitswap: createBitswap(options),\n    block: createBlock(options),\n    bootstrap: createBootstrap(options),\n    cat: createCat(options),\n    commands: createCommands(options),\n    config: createConfig(options),\n    dag: createDag(multicodecs, options),\n    dht: createDht(options),\n    diag: createDiag(options),\n    dns: createDns(options),\n    files: createFiles(options),\n    get: createGet(options),\n    getEndpointConfig: createGetEndpointConfig(options),\n    id: createId(options),\n    isOnline: createIsOnline(options),\n    key: createKey(options),\n    log: createLog(options),\n    ls: createLs(options),\n    mount: createMount(options),\n    name: createName(options),\n    object: createObject(multicodecs, options),\n    pin: createPin(options),\n    ping: createPing(options),\n    pubsub: createPubsub(options),\n    refs: createRefs(options),\n    repo: createRepo(options),\n    resolve: createResolve(options),\n    start: createStart(options),\n    stats: createStats(options),\n    stop: createStop(options),\n    swarm: createSwarm(options),\n    version: createVersion(options),\n    bases: multibases,\n    codecs: multicodecs,\n    hashers: multihashes\n  }\n\n  return client\n}\n\nexport { CID } from 'multiformats/cid'\nexport { multiaddr } from '@multiformats/multiaddr'\nexport { default as urlSource } from 'ipfs-utils/src/files/url-source.js'\nexport const globSource = globSourceImport\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\nexport const Data = $root.Data = (() => {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\nexport const UnixTime = $root.UnixTime = (() => {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\nexport const Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nexport { $root as default };\n","import errcode from 'err-code'\nimport * as Pb from './unixfs.js'\nconst PBData = Pb.Data\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nexport function parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass UnixFS {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nexport { UnixFS }\n","\n/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`\n */\nexport default async function first <T> (source: AsyncIterable<T>|Iterable<T>): Promise<T | undefined> {\n  for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n    return entry\n  }\n\n  return undefined\n}\n","/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`\n */\nexport default async function last <T> (source: AsyncIterable<T>|Iterable<T>): Promise<T | undefined> {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n","/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function\n */\nexport default async function * map <I, O> (source: AsyncIterable<I>|Iterable<I>, func: (val: I) => O | Promise<O>): AsyncGenerator<O, void, undefined> {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n","\ninterface Peek <T> {\n  peek: () => IteratorResult<T, undefined>\n}\n\ninterface AsyncPeek <T> {\n  peek: () => Promise<IteratorResult<T, undefined>>\n}\n\ninterface Push <T> {\n  push: (value: T) => void\n}\n\ntype Peekable <T> = Iterable<T> & Peek<T> & Push<T> & Iterator<T>\n\ntype AsyncPeekable <T> = AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>\n\nexport default function peekableIterator <I = Iterable<any> | AsyncIterable<any>> (iterable: I): I extends Iterable<infer T>\n  ? Peekable<T>\n  : I extends AsyncIterable<infer T>\n    ? AsyncPeekable<T>\n    : never {\n  // @ts-expect-error\n  const [iterator, symbol] = iterable[Symbol.asyncIterator] != null\n    // @ts-expect-error\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-expect-error\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  const queue: any[] = []\n\n  // @ts-expect-error\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value: any) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length > 0) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n","let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig\r\n\r\n\r\n/**\r\n * conversion ratios\r\n */\r\n\r\nparse.nanosecond =\r\nparse.ns = 1 / 1e6\r\n\r\nparse['µs'] =\r\nparse['μs'] =\r\nparse.us =\r\nparse.microsecond = 1 / 1e3\r\n\r\nparse.millisecond =\r\nparse.ms =\r\nparse[''] = 1\r\n\r\nparse.second =\r\nparse.sec =\r\nparse.s = parse.ms * 1000\r\n\r\nparse.minute =\r\nparse.min =\r\nparse.m = parse.s * 60\r\n\r\nparse.hour =\r\nparse.hr =\r\nparse.h = parse.m * 60\r\n\r\nparse.day =\r\nparse.d = parse.h * 24\r\n\r\nparse.week =\r\nparse.wk =\r\nparse.w = parse.d * 7\r\n\r\nparse.month =\r\nparse.b =\r\nparse.d * (365.25 / 12)\r\n\r\nparse.year =\r\nparse.yr =\r\nparse.y = parse.d * 365.25\r\n\r\n/**\r\n * convert `str` to ms\r\n *\r\n * @param {String} str\r\n * @param {String} format\r\n * @return {Number}\r\n */\r\n\r\nfunction parse(str='', format='ms'){\r\n  var result = null\r\n  // ignore commas/placeholders\r\n  str = (str+'').replace(/(\\d)[,_](\\d)/g, '$1$2')\r\n  str.replace(durationRE, function(_, n, units){\r\n    units = unitRatio(units)\r\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\r\n  })\r\n\r\n  return result && (result / (unitRatio(format) || 1))\r\n}\r\n\r\nfunction unitRatio(str) {\r\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')]\r\n}\r\n\r\nexport default parse\r\n"],"names":["module","exports","fn","ctx","params","Array","arguments","length","offset","index","pending","Promise","resolve","reject","err","apply","base64","string","p","n","charAt","Math","ceil","b64","s64","i","encode","buffer","start","end","t","parts","chunk","j","b","push","String","fromCharCode","slice","join","invalidEncoding","decode","c","charCodeAt","undefined","Error","test","EventEmitter","this","_listeners","prototype","on","evt","off","listeners","splice","emit","args","factory","Float32Array","f32","f8b","Uint8Array","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","log","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","replace","Object","keys","e","alloc","size","SIZE","MAX","slab","call","utf8","len","read","write","c1","c2","isElectron","require","IS_ENV_WITH_DOM","window","document","nodeType","IS_ELECTRON","IS_BROWSER","IS_ELECTRON_MAIN","IS_ELECTRON_RENDERER","IS_NODE","process","release","name","IS_WEBWORKER","importScripts","self","WorkerGlobalScope","IS_TEST","IS_REACT_NATIVE","navigator","product","isTest","isElectronMain","isElectronRenderer","isNode","isBrowser","isWebWorker","isEnvWithDom","isReactNative","HTTP","async","readURLContent","url","options","http","response","get","iterator","path","decodeURIComponent","URL","pathname","split","pop","content","protobuf","configure","util","_configure","Writer","BufferWriter","Reader","BufferReader","build","rpc","roots","LongBits","indexOutOfRange","reader","writeLength","RangeError","create_array","isArray","create","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","subarray","uint32","value","int32","sint32","bool","fixed32","sfixed32","float","double","bytes","constructor","skip","skipType","wireType","BufferReader_","Long","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","min","toString","Service","rpcImpl","requestDelimited","responseDelimited","TypeError","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","finish","setTimeout","endedByRPC","zero","toNumber","zzEncode","zeroHash","fromNumber","from","isString","parseInt","fromString","low","high","unsigned","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","src","ifNotSet","newError","CustomError","message","properties","defineProperty","captureStackTrace","stack","writable","enumerable","configurable","set","pool","global","versions","node","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","isObject","isset","isSet","obj","prop","hasOwnProperty","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","str","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","encoding","allocUnsafe","Op","next","noop","State","writer","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","fork","reset","ldelim","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","byteLength","readable","Symbol","asyncIterator","getReader","done","releaseLock","encodeOptions","float64","typeEncoders","asCID","cid","CID","cborg","number","num","decodeOptions","allowIndefinite","coerceUndefinedToNull","allowNaN","allowInfinity","allowBigInt","strict","useMaps","tags","code","data","JSONEncoder","super","inRecursive","prefix","recurs","type","Type","elements","token","is","isa","_buf","_token","encodeErrPrefix","byts","JSON","stringify","asU8A","dp","defaultEncodeOptions","addBreakTokens","mapSorter","e1","e2","keyToken1","keyToken2","Tokenizer","modeStack","lastToken","ch","currentMode","skipWhitespace","expect","decodeErrPrefix","parseNumber","startPos","negative","swallow","chars","includes","Token","numStr","parseFloat","isSafeInteger","BigInt","parseString","l","readu4","u4","readUtf8Char","firstByte","secondByte","thirdByte","fourthByte","tempCodePoint","codePoint","bytesPerSequence","ch1","decodeCodePointsArray","parseValue","bytesEncoder","bytesString","cidString","DagJsonTokenizer","cborgJson","tokenBuffer","_next","keyToken","valueToken","innerKeyToken","innerValueToken","allowUndefined","assign","encodeCustom","tokenizer","_decode","textDecoder","TextDecoder","decodeVarint","v","shift","decodeBytes","byteLen","postOffset","decodeKey","wire","decodeLink","link","fieldNum","Hash","Name","Tsize","textEncoder","TextEncoder","maxInt32","encodeLink","encodeVarint","nameBytes","encodeNode","Data","sov","Links","sizeLink","sizeNode","base","x","len8tab","len64","pbNodeProperties","pbLinkProperties","linkComparator","a","abuf","bbuf","y","hasOnlyProperties","some","asLink","pbl","prepare","pbn","map","sort","validate","createNode","links","createLink","linksBeforeData","decodeNode","symbol","for","isPeerId","other","baseDecoder","values","bases","codec","decoder","reduce","acc","curr","or","PeerIdImpl","init","multihash","privateKey","toStringTag","base58btc","toCID","toBytes","toJSON","equals","id","uint8ArrayEquals","peerIdFromString","RSAPeerIdImpl","publicKey","Ed25519PeerIdImpl","digest","Secp256k1PeerIdImpl","peerIdFromPeerId","errcode","Digest","startsWith","peerIdFromBytes","identity","sha256","version","peerIdFromCID","peerIdFromKeys","browserReadableStreamToIt","stream","result","preventCancel","cancel","toBase64url","base64url","fromBase64url","s","encodeSignature","signature","encoded","header","protected","decodeSignature","encodeRecipient","recipient","encRec","encrypted_key","decodeRecipient","isDagJWS","jose","payload","signatures","isDagJWE","ciphertext","iv","tag","toGeneral","protectedHeader","signing","jwe","recipients","encryption","encodedJose","jws","encJwe","aad","unprotected","cbor","decoded","isEncodedJWE","all","source","arr","entry","normaliseCandidateMultiple","input","normaliseContent","isBytes","isBlob","_readableState","errCode","isReadableStream","browserStreamToIt","peekable","itPeekable","peek","toFileObject","isFileObject","mode","mtime","file","parseMode","parseMtime","toAsyncIterable","thing","blob","Response","body","ArrayBuffer","isView","byteOffset","uint8ArrayFromString","normaliseInput","normaliseCandidateSingle","LOAD_BASE","Multibases","_basesByName","_basesByPrefix","_loadBase","loadBase","addBase","removeBase","nameOrPrefix","listBases","LOAD_CODEC","codeOrName","Multicodecs","_codecsByName","_codecsByCode","_loadCodec","loadCodec","codecs","addCodec","removeCodec","table","listCodecs","LOAD_HASHER","Multihashes","_hashersByName","_hashersByCode","_loadHasher","loadHasher","hasher","hashers","addHasher","removeHasher","listHashers","toPin","first","pin","recursive","metadata","toUrlString","multiaddrToUri","multiaddr","logger","mergeOpts","ignoreUndefined","DEFAULT_PROTOCOL","location","protocol","DEFAULT_HOST","hostname","DEFAULT_PORT","port","errorHandler","msg","headers","Message","text","error","KEBAB_REGEX","kebabCase","match","Client","opts","agent","isMultiaddr","host","apiPath","Agent","getAgent","keepAlive","maxSockets","normalizeOptions","timeout","parseDuration","handleError","transformSearchParams","search","out","URLSearchParams","key","append","put","delete","fetch","resource","modeToString","padStart","secs","nsecs","Seconds","FractionalNanoseconds","Date","ms","getTime","toUrlSearchParams","arg","searchParams","hashAlg","mtimeNsecs","urlSearchParams","forEach","createWantlist","api","res","post","signal","Keys","k","createWantlistForPeer","peerId","peer","createStat","toCoreInterface","provideBufLen","ProvideBufLen","wantlist","Wantlist","peers","Peers","blocksReceived","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived","createUnwant","createBitswap","config","wantlistForPeer","unwant","stat","createGet","arrayBuffer","Blob","itToBlob","multipartRequest","abortController","formData","FormData","total","fileSuffix","fieldName","qs","encodeURIComponent","File","filter","signals","abortSignal","anySignal","createPut","controller","AbortController","format","Key","createRm","removed","ndjson","Size","createBlock","rm","createAdd","addr","ma","createClear","createList","createReset","default","createBootstrap","add","clear","list","createApply","profile","original","OldCfg","updated","NewCfg","objectToCamel","caps","camelObj","createProfiles","Value","createGetAll","createReplace","createSet","encodeParam","createConfig","getAll","profiles","createExport","root","getBlock","load","getCodec","block","lastCid","remainderPath","createBlockGet","localResolve","last","createImport","pinRoots","Root","Cid","PinErrorMsg","pinErrorMsg","dagNode","settings","storeCodec","serialized","inputCodec","createResolve","ipfsPath","RemPath","createDag","export","import","mapEvent","event","ID","messageType","messageName","closer","Responses","Addrs","multiaddrs","protocols","providers","Extra","createFindPeer","createFindProvs","uint8ArrayToString","createProvide","cids","cidArr","createQuery","createDht","findPeer","findProvs","provide","query","createCmds","createNet","createSys","createDiag","cmds","net","sys","createChmod","createCp","sources","destination","sourceArr","concat","createFlush","objectToCamelWithMetadata","createLs","long","Entries","createMkdir","createMv","createRead","count","toIterable","WithLocality","createTouch","createWrite","streamChannels","createFiles","chmod","cp","flush","ls","mkdir","mv","touch","password","createGen","pem","createInfo","createRename","oldName","newName","createKey","gen","info","rename","createLevel","subsystem","level","Strings","createTail","createLog","createPublish","Path","createCancel","createState","createSubs","createPubsub","state","subs","createName","publish","pubsub","createData","dataEncoding","createLinks","createNew","template","dagPut","createDagPut","output","createAddLink","dLink","createAppendData","createRmLink","createSetData","createPatch","addLink","appendData","rmLink","setData","createObject","new","patch","createAddAll","Pins","paths","Metadata","createRmAll","decodePin","Status","status","encodeService","service","encodeCID","encodeQuery","force","encodeAddParams","background","origins","origin","client","encodeEndpoint","href","decodeRemoteService","endpoint","ApiEndpoint","Stat","decodeStat","Pinning","Pinned","Queued","Failed","PinCount","pinCount","queued","pinning","pinned","failed","RemoteServices","createService","createRemote","rmAll","createPin","addAll","remote","rpcArrayToTextArray","strings","rpcToText","mb","rpcToBytes","textToUrlSafeRpc","createPeers","topic","readMessages","onMessage","onEnd","onError","seqno","sequenceNumber","topicIDs","isAbortError","createUnsubscribe","subsTracker","handler","unsubscribe","SubscriptionTracker","_subs","Map","subscribe","topicSubs","find","addEventListener","unsubs","abort","subscriptionTracker","fail","ffWorkaround","catch","then","clearTimeout","handleEvent","createLocal","transform","createRefs","argsArr","local","createGc","numObjects","NumObjects","repoSize","RepoSize","repoPath","RepoPath","Version","storageMax","StorageMax","createVersion","createRepo","gc","createBw","stats","totalIn","TotalIn","totalOut","TotalOut","rateIn","RateIn","rateOut","RateOut","createStats","bitswap","repo","bw","createAddrs","addrs","createConnect","createDisconnect","createLocalAddrs","Addr","Peer","muxer","Muxer","latency","Latency","streams","Streams","direction","Direction","createSwarm","connect","disconnect","localAddrs","progressFn","onUploadProgress","progress","createProgressHandler","createOnUploadProgress","loaded","position","createCat","createCommands","createDns","domain","createGetEndpointConfig","compressionLevel","createId","addresses","createIsOnline","pathStr","mapLink","typeOf","Mode","Mtime","MtimeNsecs","Objects","createMount","createPing","createStart","createStop","multibaseCodecs","ipld","multibases","blockCodecs","dagPB","dagCBOR","dagJSON","dagJOSE","multicodecs","multihashHashers","hashes","multihashes","bootstrap","cat","commands","dag","dht","diag","dns","files","getEndpointConfig","isOnline","mount","object","ping","refs","stop","swarm","globSource","globSourceImport","$Reader","$protobuf","$Writer","$util","$root","blocksizes","ks","filesize","hashType","fanout","m","w","UnixTime","r","instance","fromObject","d","fromValue","toObject","o","arrays","defaults","DataType","valuesById","PBData","MimeType","Pb","types","dirTypes","DEFAULT_FILE_MODE","DEFAULT_DIRECTORY_MODE","UnixFS","static","marshaled","objects","blockSizes","_originalMode","_mode","isDirectory","parsedMode","addBlockSize","removeBlockSize","fileSize","sum","marshal","Raw","Directory","Symlink","HAMTShard","parsed","pbData","func","peekableIterator","iterable","queue","durationRE","parse","_","units","unitRatio","nanosecond","ns","us","microsecond","millisecond","second","sec","minute","hour","hr","h","day","week","wk","month","year","yr"],"sourceRoot":""}